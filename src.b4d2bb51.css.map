{"version":3,"sources":["node_modules/carbon-components/scss/components/list/_list.scss","node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_reset.scss","node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/_styles.scss","node_modules/carbon-components/scss/globals/scss/_helper-mixins.scss","node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/font-face/_mono.scss","node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/font-face/_settings.scss","node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/type/font-face/_sans.scss","node_modules/carbon-components/scss/globals/scss/_css--reset.scss","node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/themes/generated/_mixins.scss","node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/layout/generated/_spacing.scss","src/index.scss","node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/themes/_mixins.scss","node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/colors/mixins.scss","node_modules/carbon-components/scss/globals/scss/vendor/@carbon/elements/scss/layout/_breakpoint.scss"],"names":[],"mappings":"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","file":"src.b4d2bb51.css","sourceRoot":"..","sourcesContent":["//\n// Copyright IBM Corp. 2016, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n//-----------------------------\n// List\n//-----------------------------\n\n@import '../../globals/scss/vars';\n@import '../../globals/scss/css--reset';\n@import '../../globals/scss/typography';\n@import '../../globals/scss/vendor/@carbon/elements/scss/import-once/import-once';\n\n/// List styles\n/// @access private\n/// @group list\n@mixin lists {\n  .#{$prefix}--list--nested,\n  .#{$prefix}--list--unordered,\n  .#{$prefix}--list--ordered {\n    @include reset;\n    @include type-style('body-short-01');\n\n    list-style: none;\n  }\n\n  .#{$prefix}--list__item {\n    color: $text-01;\n    margin-bottom: $carbon--spacing-02;\n  }\n\n  .#{$prefix}--list--nested {\n    margin-top: $carbon--spacing-02;\n    margin-left: $carbon--spacing-06;\n  }\n\n  .#{$prefix}--list--nested > .#{$prefix}--list__item {\n    margin-top: 0;\n    margin-bottom: 0;\n  }\n\n  .#{$prefix}--list--nested .#{$prefix}--list--nested {\n    margin-top: 0;\n  }\n\n  .#{$prefix}--list--ordered:not(.#{$prefix}--list--nested) {\n    counter-reset: item;\n  }\n\n  .#{$prefix}--list--ordered:not(.#{$prefix}--list--nested)\n    > .#{$prefix}--list__item {\n    position: relative;\n  }\n\n  .#{$prefix}--list--ordered:not(.#{$prefix}--list--nested)\n    > .#{$prefix}--list__item::before {\n    content: counter(item) '.';\n    counter-increment: item;\n    position: absolute;\n    left: rem(-24px);\n  }\n\n  .#{$prefix}--list--ordered.#{$prefix}--list--nested {\n    list-style-type: lower-latin;\n  }\n\n  .#{$prefix}--list--unordered > .#{$prefix}--list__item {\n    position: relative;\n\n    &::before {\n      position: absolute;\n      left: -$carbon--spacing-05;\n      content: '\\002013'; // – en dash\n    }\n  }\n\n  .#{$prefix}--list--unordered.#{$prefix}--list--nested\n    > .#{$prefix}--list__item::before {\n    left: -$carbon--spacing-04; // offset to account for smaller ▪ vs –\n    content: '\\0025AA'; // ▪ square\n  }\n}\n\n@include exports('lists') {\n  @include lists;\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/convert';\n@import 'font-family';\n@import 'styles';\n\n/// Include a type reset for a given body and mono font family\n/// @param {String} $body-font-family [carbon--font-family('sans')] - The font family used on the `<body>` element\n/// @param {String} $mono-font-family [carbon--font-family('mono')] - The font family used on elements that require mono fonts, like the `<code>` element\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-reset(\n  // TODO: remove in next major release. This has been replaced with 100%\n    $base-font-size: $carbon--base-font-size,\n  $body-font-family: carbon--font-family('sans'),\n  $mono-font-family: carbon--font-family('mono')\n) {\n  html {\n    font-size: 100%;\n  }\n\n  body {\n    @include carbon--font-weight('regular');\n\n    font-family: $body-font-family;\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  code {\n    font-family: $mono-font-family;\n  }\n\n  strong {\n    @include carbon--font-weight('semibold');\n  }\n}\n\n/// Include default type styles\n/// @access public\n/// @group @carbon/type\n@mixin carbon--default-type {\n  h1 {\n    @include carbon--type-style('productive-heading-06');\n  }\n\n  h2 {\n    @include carbon--type-style('productive-heading-05');\n  }\n\n  h3 {\n    @include carbon--type-style('productive-heading-04');\n  }\n\n  h4 {\n    @include carbon--type-style('productive-heading-03');\n  }\n\n  h5 {\n    @include carbon--type-style('productive-heading-02');\n  }\n\n  h6 {\n    @include carbon--type-style('productive-heading-01');\n  }\n\n  p {\n    @include carbon--type-style('body-long-02');\n  }\n\n  a {\n    color: #0062ff;\n  }\n\n  em {\n    font-style: italic;\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import '../layout/breakpoint';\n@import 'font-family';\n@import 'scale';\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$caption-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(16px),\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$label-01: (\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(16px),\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$helper-text-01: (\n  font-size: carbon--type-scale(1),\n  line-height: carbon--rem(16px),\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(18px),\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(20px),\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-short-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(22px),\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$body-long-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(24px),\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-01: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(1),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(16px),\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$code-02: (\n  font-family: carbon--font-family('mono'),\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(20px),\n  letter-spacing: 0.32px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-01: (\n  font-size: carbon--type-scale(2),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: carbon--rem(18px),\n  letter-spacing: 0.16px,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-01: $heading-01 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$heading-02: (\n  font-size: carbon--type-scale(3),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: carbon--rem(22px),\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-02: $heading-02 !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(26px),\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(36px),\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: carbon--rem(40px),\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: carbon--rem(50px),\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$productive-heading-07: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: carbon--rem(64px),\n  letter-spacing: 0,\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-01: map-merge(\n  $heading-01,\n  (\n    line-height: carbon--rem(20px),\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-02: map-merge(\n  $heading-02,\n  (\n    line-height: carbon--rem(24px),\n  )\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-03: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 130%,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(5),\n      line-height: 125%,\n    ),\n    max: (\n      font-size: carbon--type-scale(6),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-04: (\n  font-size: carbon--type-scale(7),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 129%,\n  letter-spacing: 0,\n  breakpoints: (\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 125%,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-05: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 125%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 122%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 119%,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 117%,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-heading-06: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 125%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 122%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 119%,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 117%,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$expressive-paragraph-01: (\n  font-size: carbon--type-scale(6),\n  font-weight: carbon--font-weight('light'),\n  line-height: 125%,\n  letter-spacing: 0,\n  breakpoints: (\n    lg: (\n      font-size: carbon--type-scale(7),\n      line-height: 129%,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 125%,\n    ),\n  ),\n);\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-01: (\n  font-size: carbon--type-scale(5),\n  font-weight: carbon--font-weight('regular'),\n  line-height: 130%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(5),\n    ),\n    lg: (\n      font-size: carbon--type-scale(6),\n      line-height: 125%,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(7),\n      line-height: 129%,\n    ),\n    max: (\n      font-size: carbon--type-scale(8),\n      line-height: 125%,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$quotation-02: (\n  font-size: carbon--type-scale(8),\n  font-weight: carbon--font-weight('light'),\n  line-height: 125%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(9),\n      line-height: 122%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(10),\n      line-height: 119%,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(11),\n      line-height: 117%,\n    ),\n    max: (\n      font-size: carbon--type-scale(13),\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-01: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 119%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 117%,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 113%,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-02: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 119%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(10),\n    ),\n    lg: (\n      font-size: carbon--type-scale(12),\n    ),\n    xlg: (\n      font-size: carbon--type-scale(13),\n      line-height: 116%,\n    ),\n    max: (\n      font-size: carbon--type-scale(15),\n      line-height: 113%,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-03: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('light'),\n  line-height: 119%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 115%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 111%,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 107%,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 105%,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$display-04: (\n  font-size: carbon--type-scale(10),\n  font-weight: carbon--font-weight('semibold'),\n  line-height: 119%,\n  letter-spacing: 0,\n  breakpoints: (\n    md: (\n      font-size: carbon--type-scale(14),\n      line-height: 115%,\n    ),\n    lg: (\n      font-size: carbon--type-scale(17),\n      line-height: 111%,\n      letter-spacing: -0.64px,\n    ),\n    xlg: (\n      font-size: carbon--type-scale(20),\n      line-height: 107%,\n      letter-spacing: -0.64px,\n    ),\n    max: (\n      font-size: carbon--type-scale(23),\n      line-height: 105%,\n      letter-spacing: -0.96px,\n    ),\n  ),\n) !default;\n\n/// @type Map\n/// @access public\n/// @group @carbon/type\n$tokens: (\n  caption-01: $caption-01,\n  label-01: $label-01,\n  helper-text-01: $helper-text-01,\n  body-short-01: $body-short-01,\n  body-short-02: $body-short-02,\n  body-long-01: $body-long-01,\n  body-long-02: $body-long-02,\n  code-01: $code-01,\n  code-02: $code-02,\n  heading-01: $heading-01,\n  heading-02: $heading-02,\n  productive-heading-01: $productive-heading-01,\n  productive-heading-02: $productive-heading-02,\n  productive-heading-03: $productive-heading-03,\n  productive-heading-04: $productive-heading-04,\n  productive-heading-05: $productive-heading-05,\n  productive-heading-06: $productive-heading-06,\n  productive-heading-07: $productive-heading-07,\n  expressive-paragraph-01: $expressive-paragraph-01,\n  expressive-heading-01: $expressive-heading-01,\n  expressive-heading-02: $expressive-heading-02,\n  expressive-heading-03: $expressive-heading-03,\n  expressive-heading-04: $expressive-heading-04,\n  expressive-heading-05: $expressive-heading-05,\n  expressive-heading-06: $expressive-heading-06,\n  quotation-01: $quotation-01,\n  quotation-02: $quotation-02,\n  display-01: $display-01,\n  display-02: $display-02,\n  display-03: $display-03,\n  display-04: $display-04,\n);\n\n/// @param {Map} $map\n/// @access public\n/// @group @carbon/type\n@mixin properties($map) {\n  @each $name, $value in $map {\n    #{$name}: $value;\n  }\n}\n\n/// @param {Number} $value - Number with units\n/// @return {Number} Without units\n/// @access public\n/// @group @carbon/type\n@function strip-unit($value) {\n  @return $value / ($value * 0 + 1);\n}\n\n/// This helper includes fluid type styles for the given token value. Fluid type\n/// means that the `font-size` is computed using `calc()` in order to be\n/// determined by the screen size instead of a breakpoint. As a result, fluid\n/// styles should be used with caution in fixed width contexts.\n///\n/// In addition, we make use of %-based line-heights so that the line-height of\n/// each type style is computed correctly due to the dynamic nature of the\n/// `font-size`.\n///\n/// Most of the logic for this work comes from CSS Tricks:\n/// https://css-tricks.com/snippets/css/fluid-typography/\n///\n/// @param {Map} $type-styles - The value of a given type token\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Custom breakpoints to use\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type($type-styles, $breakpoints: $carbon--grid-breakpoints) {\n  // Include the initial styles for the given token by default without any\n  // media query guard. This includes `font-size` as a fallback in the case\n  // that a browser does not support `calc()`\n  @include properties(map-remove($type-styles, breakpoints));\n  // We also need to include the `sm` styles by default since they don't\n  // appear in the fluid styles for tokens\n  @include fluid-type-size($type-styles, sm, $breakpoints);\n\n  // Finally, we need to go through all the breakpoints defined in the type\n  // token and apply the properties and fluid type size for that given\n  // breakpoint\n  @each $name, $values in map-get($type-styles, breakpoints) {\n    @include carbon--breakpoint($name) {\n      @include properties($values);\n      @include fluid-type-size($type-styles, $name, $breakpoints);\n    }\n  }\n}\n\n/// Computes the fluid `font-size` for a given type style and breakpoint\n/// @param {Map} $type-styles - The styles for a given token\n/// @param {String} $name - The name of the breakpoint to which we apply the fluid\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - The breakpoints for the grid system\n/// @access public\n/// @group @carbon/type\n@mixin fluid-type-size(\n  $type-styles,\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  // Get the information about the breakpoint we're currently working in. Useful\n  // for getting initial width information\n  $breakpoint: map-get($breakpoints, $name);\n\n  // Our fluid styles are captured under the 'breakpoints' property in our type\n  // styles map. These define what values to treat as `max-` variables below\n  $fluid-sizes: map-get($type-styles, breakpoints);\n  $fluid-breakpoint: ();\n  // Special case for `sm` because the styles for small are on the type style\n  // directly\n  @if $name == sm {\n    $fluid-breakpoint: map-remove($type-styles, breakpoints);\n  } @else {\n    $fluid-breakpoint: map-get($fluid-sizes, $name);\n  }\n\n  // Initialize our font-sizes to the default size for the type style\n  $max-font-size: map-get($type-styles, font-size);\n  $min-font-size: map-get($type-styles, font-size);\n  @if map-has-key($fluid-breakpoint, font-size) {\n    $min-font-size: map-get($fluid-breakpoint, font-size);\n  }\n\n  // Initialize our min and max width to the width of the current breakpoint\n  $max-vw: map-get($breakpoint, width);\n  $min-vw: map-get($breakpoint, width);\n\n  // We can use `breakpoint-next` to see if there is another breakpoint we can\n  // use to update `max-font-size` and `max-vw` with larger values\n  $next-breakpoint-available: carbon--breakpoint-next($name, $breakpoints);\n  $next-fluid-breakpoint-name: null;\n\n  // We need to figure out what the next available fluid breakpoint is for our\n  // given $type-styles. In this loop we try and iterate through breakpoints\n  // until we either manually set $next-breakpoint-available to null or\n  // `breakpoint-next` returns null.\n  @while $next-breakpoint-available {\n    @if map-has-key($fluid-sizes, $next-breakpoint-available) {\n      $next-fluid-breakpoint-name: $next-breakpoint-available;\n      $next-breakpoint-available: null;\n    } @else {\n      $next-breakpoint-available: carbon--breakpoint-next(\n        $next-breakpoint-available,\n        $breakpoints\n      );\n    }\n  }\n\n  // If we have found the next available fluid breakpoint name, then we know\n  // that we have values that we can use to set max-font-size and max-vw as both\n  // values derive from the next breakpoint\n  @if $next-fluid-breakpoint-name {\n    $next-fluid-breakpoint: map-get($breakpoints, $next-fluid-breakpoint-name);\n    $max-font-size: map-get(\n      map-get($fluid-sizes, $next-fluid-breakpoint-name),\n      font-size\n    );\n    $max-vw: map-get($next-fluid-breakpoint, width);\n\n    // prettier-ignore\n    font-size: calc(#{$min-font-size} +\n      #{strip-unit($max-font-size - $min-font-size)} *\n      ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)})\n    );\n  } @else {\n    // Otherwise, just default to setting the font size found from the type\n    // style or the given fluid breakpoint in the type style\n    font-size: $min-font-size;\n  }\n}\n\n// TODO move following variable and `custom-property` mixin into shared file for\n// both `@carbon/type` and `@carbon/themes`\n\n/// @access private\n/// @group @carbon/type\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/type\n@mixin custom-properties($name, $value) {\n  @each $property, $value in $value {\n    #{$property}: var(\n      --#{$custom-property-prefix}-#{$name}-#{$property},\n      #{$value}\n    );\n  }\n}\n\n/// Helper mixin to include the styles for a given token in any selector in your\n/// project. Also includes an optional fluid option that will enable fluid\n/// styles for the token if they are defined. Fluid styles will cause the\n/// token's font-size to be computed based on the viewport size. As a result, use\n/// with caution in fixed contexts.\n/// @param {String} $name - The name of the token to get the styles for\n/// @param {Boolean} $fluid [false] - Specify whether to include fluid styles for the\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - Provide a custom breakpoint map to use\n/// @access public\n/// @group @carbon/type\n@mixin carbon--type-style(\n  $name,\n  $fluid: false,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @if not map-has-key($tokens, $name) {\n    @error 'Unable to find a token with the name: `#{$name}`';\n  }\n\n  $token: map-get($tokens, $name);\n\n  // If $fluid is set to true and the token has breakpoints defined for fluid\n  // styles, delegate to the fluid-type helper for the given token\n  @if $fluid == true and map-has-key($token, 'breakpoints') {\n    @include fluid-type($token, $breakpoints);\n  } @else {\n    @if global-variable-exists('feature-flags') and\n      map-get($feature-flags, 'enable-css-custom-properties')\n    {\n      @include custom-properties($name, $token);\n    } @else {\n      // Otherwise, we just include all the property declarations directly on the\n      // selector\n      @include properties(map-remove($token, 'breakpoints'));\n    }\n  }\n}\n","//\n// Copyright IBM Corp. 2016, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n//----------------------------------------------\n// Mixins\n// ---------------------------------------------\n//\n//   Category             ||  Description\n//   ===========================================\n//   Misc                 ||  General helper @mixins\n//   Deprecated           ||  Not used anymore\n//   ===========================================\n\n//----------------------------------------------\n// Misc\n// ---------------------------------------------\n\n@import 'vars';\n@import 'css--reset';\n@import 'typography';\n@import './vendor/@carbon/elements/scss/import-once/import-once';\n\n/// Adds text overflow styling\n/// @access public\n/// @param {Number} $width [false] - Value of width if you want to set width, else nothing\n/// @example @include text-overflow(300px);\n/// @group global-helpers\n@mixin text-overflow($width: false) {\n  display: block;\n  overflow-x: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n\n  // apply a width if width parameter exists\n  @if ($width) {\n    width: $width;\n  }\n}\n\n/// Adds placeholder text color\n/// @access public\n/// @example @include placeholder-colors;\n/// @group global-helpers\n@mixin placeholder-colors {\n  color: $text-03;\n}\n\n/// Adds box shadow\n/// @access public\n/// @example @include box-shadow;\n/// @group global-helpers\n@mixin box-shadow {\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n}\n\n/// Adds outline styles depending on specific type\n/// @access public\n/// @param {String} $type ['border'] - Type of outline from: `border`, `blurred`, `outline`, `invalid`, `reset`\n/// @example @include focus-outline('outline');\n/// @group global-helpers\n@mixin focus-outline($type: 'border') {\n  @if ($type == 'border') {\n    outline: 1px solid $focus;\n  }\n\n  @if ($type == 'blurred') {\n    box-shadow: 0 0 0 3px $focus;\n    outline: 1px solid transparent;\n  }\n\n  @if ($type == 'outline') {\n    outline: 2px solid $focus;\n    outline-offset: -2px;\n  }\n\n  @if ($type == 'outline-compat') {\n    border: 2px solid $focus;\n    box-sizing: border-box;\n  }\n\n  @if ($type == 'invalid') {\n    outline: 2px solid $support-01;\n    outline-offset: -2px;\n  }\n\n  @if ($type == 'reset') {\n    outline: 2px solid transparent;\n    outline-offset: -2px;\n  }\n}\n\n/// Adds rotational transformation\n/// @access public\n/// @param {Number} $deg - How many degrees to rotate\n/// @param {Number} $speed - Speed of rotation\n/// @param {Value} $origin [center] - `transform-origin`\n/// @example @include rotate(90deg, 300ms);\n/// @group global-helpers\n@mixin rotate($deg, $speed, $origin: center) {\n  transform: rotate($deg);\n  transition: transform $speed;\n  transform-origin: $origin;\n}\n\n/// Adds styles to hide content\n/// @access public\n/// @group global-helpers\n@mixin hidden {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  border: 0;\n  visibility: visible;\n  white-space: nowrap;\n}\n\n/// Resets button styles\n/// @access public\n/// @param {Bool} $width [true] - Sets width to 100% if true\n/// @example @include button-reset($width: false);\n/// @group global-helpers\n@mixin button-reset($width: true) {\n  @include reset;\n  display: inline-block;\n  background: none;\n  appearance: none;\n  border: 0;\n  padding: 0;\n  cursor: pointer;\n\n  @if ($width == true) {\n    width: 100%;\n  }\n\n  &::-moz-focus-inner {\n    border: 0;\n  }\n}\n\n/// Skeleton loading animation\n/// @access public\n/// @example @include skeleton;\n/// @group global-helpers\n@mixin skeleton {\n  position: relative;\n  border: none;\n  padding: 0;\n  box-shadow: none;\n  pointer-events: none;\n  background: $skeleton-01;\n\n  &:hover,\n  &:focus,\n  &:active {\n    border: none;\n    outline: none;\n    cursor: default;\n  }\n\n  &:before {\n    content: '';\n    width: 0%;\n    height: 100%;\n    position: absolute;\n    top: 0;\n    left: 0;\n    background: $skeleton-02;\n    animation: 3000ms ease-in-out skeleton infinite;\n\n    @media (prefers-reduced-motion: reduce) {\n      animation: none;\n    }\n  }\n}\n\n@include exports('skeleton') {\n  @keyframes skeleton {\n    0% {\n      width: 0%;\n      left: 0;\n      right: auto;\n      opacity: 0.3;\n    }\n    20% {\n      width: 100%;\n      left: 0;\n      right: auto;\n      opacity: 1;\n    }\n    28% {\n      width: 100%;\n      left: auto;\n      right: 0;\n    }\n    51% {\n      width: 0%;\n      left: auto;\n      right: 0;\n    }\n    58% {\n      width: 0%;\n      left: auto;\n      right: 0;\n    }\n    82% {\n      width: 100%;\n      left: auto;\n      right: 0;\n    }\n    83% {\n      width: 100%;\n      left: 0;\n      right: auto;\n    }\n    96% {\n      width: 0%;\n      left: 0;\n      right: auto;\n    }\n    100% {\n      width: 0%;\n      left: 0;\n      right: auto;\n      opacity: 0.3;\n    }\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import 'settings';\n\n/// Mono `@font-face`'s\n/// @access public\n/// @group @carbon/type\n@mixin carbon--font-face-mono {\n  // .woff support for IE11\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Light Italic'), local('IBMPlexMono-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSflV1gMoW.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Italic'), local('IBMPlexMono-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6pfjptAgt5VM-kVkqdyU8n1ioa1Xdm.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono SemiBold Italic'),\n      local('IBMPlexMono-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSClN1gMoW.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Light'), local('IBMPlexMono-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3oQIwlBFhA.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono'), local('IBMPlexMono'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F63fjptAgt5VM-kVkqdyU8n1i8q0Q.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono SemiBold'), local('IBMPlexMono-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3vAOwlBFhA.woff)\n        format('woff');\n  }\n\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Light Italic'), local('IBMPlexMono-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSflV1jcoQPttoz6Pz.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Light Italic'), local('IBMPlexMono-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSflV1hMoQPttoz6Pz.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Light Italic'), local('IBMPlexMono-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSflV1j8oQPttoz6Pz.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Light Italic'), local('IBMPlexMono-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSflV1jsoQPttoz6Pz.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Light Italic'), local('IBMPlexMono-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSflV1gMoQPttozw.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Italic'), local('IBMPlexMono-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6pfjptAgt5VM-kVkqdyU8n1ioa2HdgregdFOFh.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Italic'), local('IBMPlexMono-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6pfjptAgt5VM-kVkqdyU8n1ioa0XdgregdFOFh.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Italic'), local('IBMPlexMono-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6pfjptAgt5VM-kVkqdyU8n1ioa2ndgregdFOFh.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Italic'), local('IBMPlexMono-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6pfjptAgt5VM-kVkqdyU8n1ioa23dgregdFOFh.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Italic'), local('IBMPlexMono-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6pfjptAgt5VM-kVkqdyU8n1ioa1XdgregdFA.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono SemiBold Italic'),\n      local('IBMPlexMono-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSClN1jcoQPttoz6Pz.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono SemiBold Italic'),\n      local('IBMPlexMono-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSClN1hMoQPttoz6Pz.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono SemiBold Italic'),\n      local('IBMPlexMono-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSClN1j8oQPttoz6Pz.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono SemiBold Italic'),\n      local('IBMPlexMono-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSClN1jsoQPttoz6Pz.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono SemiBold Italic'),\n      local('IBMPlexMono-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6sfjptAgt5VM-kVkqdyU8n1ioSClN1gMoQPttozw.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Light'), local('IBMPlexMono-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3oQIwl1FgsAXHNlYzg.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Light'), local('IBMPlexMono-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3oQIwlRFgsAXHNlYzg.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Light'), local('IBMPlexMono-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3oQIwl9FgsAXHNlYzg.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Light'), local('IBMPlexMono-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3oQIwl5FgsAXHNlYzg.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono Light'), local('IBMPlexMono-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3oQIwlBFgsAXHNk.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono'), local('IBMPlexMono'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F63fjptAgt5VM-kVkqdyU8n1iIq131nj-otFQ.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono'), local('IBMPlexMono'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F63fjptAgt5VM-kVkqdyU8n1isq131nj-otFQ.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono'), local('IBMPlexMono'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F63fjptAgt5VM-kVkqdyU8n1iAq131nj-otFQ.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono'), local('IBMPlexMono'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F63fjptAgt5VM-kVkqdyU8n1iEq131nj-otFQ.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono'), local('IBMPlexMono'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F63fjptAgt5VM-kVkqdyU8n1i8q131nj-o.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono SemiBold'), local('IBMPlexMono-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3vAOwl1FgsAXHNlYzg.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono SemiBold'), local('IBMPlexMono-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3vAOwlRFgsAXHNlYzg.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono SemiBold'), local('IBMPlexMono-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3vAOwl9FgsAXHNlYzg.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono SemiBold'), local('IBMPlexMono-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3vAOwl5FgsAXHNlYzg.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Mono';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Mono SemiBold'), local('IBMPlexMono-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexmono/v4/-F6qfjptAgt5VM-kVkqdyU8n3vAOwlBFgsAXHNk.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// Defines how font files are loaded and displayed by the browser\n/// @link https://css-tricks.com/almanac/properties/f/font-display/\n/// @access public\n/// @group @carbon/type\n$carbon--font-display: auto !default;\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import 'settings';\n\n/// Sans `@font-face`'s\n/// @access public\n/// @group @carbon/type\n@mixin carbon--font-face-sans {\n  // .woff support for IE11\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light Italic'), local('IBMPlexSans-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRcdvfo.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuF6ZP.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold Italic'),\n      local('IBMPlexSans-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJcdvfo.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIFscg.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdHeEw.woff)\n        format('woff');\n  }\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIFscg.woff)\n        format('woff');\n  }\n\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light Italic'), local('IBMPlexSans-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRce_fuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light Italic'), local('IBMPlexSans-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRccvfuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* greek */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light Italic'), local('IBMPlexSans-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRcdffuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0370-03FF;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light Italic'), local('IBMPlexSans-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRceffuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light Italic'), local('IBMPlexSans-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRcePfuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light Italic'), local('IBMPlexSans-LightItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmvIRcdvfuJGl18Q.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuGqZJW9XjDlN8.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuE6ZJW9XjDlN8.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* greek */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuFKZJW9XjDlN8.woff2)\n        format('woff2');\n    unicode-range: U+0370-03FF;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuGKZJW9XjDlN8.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuGaZJW9XjDlN8.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Italic'), local('IBMPlexSans-Italic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX-KVElMYYaJe8bpLHnCwDKhdTuF6ZJW9XjDg.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold Italic'),\n      local('IBMPlexSans-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJce_fuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold Italic'),\n      local('IBMPlexSans-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJccvfuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* greek */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold Italic'),\n      local('IBMPlexSans-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJcdffuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0370-03FF;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold Italic'),\n      local('IBMPlexSans-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJceffuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold Italic'),\n      local('IBMPlexSans-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJcePfuJGl18QRY.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: italic;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold Italic'),\n      local('IBMPlexSans-SemiBoldItalic'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX7KVElMYYaJe8bpLHnCwDKhdTmyIJcdvfuJGl18Q.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIxsdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIVsdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* greek */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIJsdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0370-03FF;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AI5sdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AI9sdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 300;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans Light'), local('IBMPlexSans-Light'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjXr8AIFsdP3pBms.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdzeFaxOedfTDw.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdXeFaxOedfTDw.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* greek */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdLeFaxOedfTDw.woff2)\n        format('woff2');\n    unicode-range: U+0370-03FF;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhd7eFaxOedfTDw.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhd_eFaxOedfTDw.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 400;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans'), local('IBMPlexSans'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYXgKVElMYYaJe8bpLHnCwDKhdHeFaxOedc.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n  /* cyrillic-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIxsdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F,\n      U+FE2E-FE2F;\n  }\n  /* cyrillic */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIVsdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116;\n  }\n  /* greek */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIJsdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0370-03FF;\n  }\n  /* vietnamese */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AI5sdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0102-0103, U+0110-0111, U+1EA0-1EF9, U+20AB;\n  }\n  /* latin-ext */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AI9sdP3pBmtF8A.woff2)\n        format('woff2');\n    unicode-range: U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB,\n      U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF;\n  }\n  /* latin */\n  @font-face {\n    font-family: 'IBM Plex Sans';\n    font-style: normal;\n    font-weight: 600;\n    font-display: $carbon--font-display;\n    src: local('IBM Plex Sans SemiBold'), local('IBMPlexSans-SemiBold'),\n      url(https://fonts.gstatic.com/s/ibmplexsans/v6/zYX9KVElMYYaJe8bpLHnCwDKjQ76AIFsdP3pBms.woff2)\n        format('woff2');\n    unicode-range: U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA,\n      U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212,\n      U+2215, U+FEFF, U+FFFD;\n  }\n}\n","//\n// Copyright IBM Corp. 2016, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import './vendor/@carbon/elements/scss/import-once/import-once';\n@import './vendor/@carbon/elements/scss/type/reset';\n@import './vendor/@carbon/elements/scss/icons/mixins';\n\n/// Resets default browser styling\n/// @access public\n/// @group global-reset\n@mixin reset {\n  @if variable-exists(css--reset) == false or $css--reset == false {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font-family: inherit;\n    vertical-align: baseline;\n\n    *,\n    *:before,\n    *:after {\n      box-sizing: inherit;\n    }\n  }\n}\n\n@include exports('css--reset') {\n  @if variable-exists(css--reset) == false or $css--reset == true {\n    // http://cssreset.com/scripts/eric-meyer-reset-css/\n    html,\n    body,\n    div,\n    span,\n    applet,\n    object,\n    iframe,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    p,\n    blockquote,\n    pre,\n    a,\n    abbr,\n    acronym,\n    address,\n    big,\n    cite,\n    code,\n    del,\n    dfn,\n    em,\n    img,\n    ins,\n    kbd,\n    q,\n    s,\n    samp,\n    small,\n    strike,\n    strong,\n    sub,\n    sup,\n    tt,\n    var,\n    b,\n    u,\n    i,\n    center,\n    dl,\n    dt,\n    dd,\n    ol,\n    ul,\n    li,\n    fieldset,\n    form,\n    label,\n    legend,\n    table,\n    caption,\n    tbody,\n    tfoot,\n    thead,\n    tr,\n    th,\n    td,\n    article,\n    aside,\n    canvas,\n    details,\n    embed,\n    figure,\n    figcaption,\n    footer,\n    header,\n    hgroup,\n    menu,\n    nav,\n    output,\n    ruby,\n    section,\n    summary,\n    time,\n    mark,\n    audio,\n    video {\n      margin: 0;\n      padding: 0;\n      border: 0;\n      font-size: 100%;\n      font: inherit;\n      vertical-align: baseline;\n    }\n\n    // Chrome 62 fix\n    button,\n    select,\n    input,\n    textarea {\n      border-radius: 0;\n      font-family: inherit;\n    }\n\n    input[type='text']::-ms-clear {\n      display: none;\n    }\n\n    /* HTML5 display-role reset for older browsers */\n    article,\n    aside,\n    details,\n    figcaption,\n    figure,\n    footer,\n    header,\n    hgroup,\n    main,\n    menu,\n    nav,\n    section {\n      display: block;\n    }\n\n    body {\n      line-height: 1;\n    }\n\n    sup {\n      vertical-align: super;\n    }\n\n    sub {\n      vertical-align: sub;\n    }\n\n    ol,\n    ul {\n      list-style: none;\n    }\n\n    blockquote,\n    q {\n      quotes: none;\n    }\n\n    blockquote:before,\n    blockquote:after,\n    q:before,\n    q:after {\n      content: '';\n      content: none;\n    }\n\n    table {\n      border-collapse: collapse;\n      border-spacing: 0;\n    }\n\n    * {\n      box-sizing: border-box;\n    }\n\n    // Fix to remove added margins on buttons in safari (see #5155)\n    button {\n      margin: 0;\n    }\n\n    @include carbon--type-reset;\n    @include carbon--icons;\n  }\n}\n\n@include exports('css--default-type') {\n  @if variable-exists(css--default-type) == false or $css--default-type == true\n  {\n    @include carbon--default-type;\n  }\n}\n","// Code generated by @carbon/themes. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n@import './themes';\n\n/// Define theme variables from a map of tokens\n/// @access public\n/// @param {Map} $theme [$carbon--theme] - Map of theme tokens\n/// @param {Bool} $emit-custom-properties [false] - Output CSS Custom Properties for theme tokens\n/// @content Pass in your custom declaration blocks to be used after the token maps set theming variables.\n///\n/// @example scss\n///   // Default usage\n///   @include carbon--theme();\n///\n///   // Alternate styling (not white theme)\n///   @include carbon--theme($carbon--theme--g90) {\n///     // declarations...\n///   }\n///\n///   // Inline styling\n///   @include carbon--theme($carbon--theme--g90) {\n///     .my-dark-theme {\n///       // declarations...\n///     }\n///   }\n///\n/// @group @carbon/themes\n@mixin carbon--theme(\n  $theme: $carbon--theme,\n  $emit-custom-properties: false,\n  $emit-difference: false\n) {\n  $interactive-01: map-get($theme, 'interactive-01') !global;\n  $interactive-02: map-get($theme, 'interactive-02') !global;\n  $interactive-03: map-get($theme, 'interactive-03') !global;\n  $interactive-04: map-get($theme, 'interactive-04') !global;\n  $ui-background: map-get($theme, 'ui-background') !global;\n  $ui-01: map-get($theme, 'ui-01') !global;\n  $ui-02: map-get($theme, 'ui-02') !global;\n  $ui-03: map-get($theme, 'ui-03') !global;\n  $ui-04: map-get($theme, 'ui-04') !global;\n  $ui-05: map-get($theme, 'ui-05') !global;\n  $text-01: map-get($theme, 'text-01') !global;\n  $text-02: map-get($theme, 'text-02') !global;\n  $text-03: map-get($theme, 'text-03') !global;\n  $text-04: map-get($theme, 'text-04') !global;\n  $text-05: map-get($theme, 'text-05') !global;\n  $text-error: map-get($theme, 'text-error') !global;\n  $icon-01: map-get($theme, 'icon-01') !global;\n  $icon-02: map-get($theme, 'icon-02') !global;\n  $icon-03: map-get($theme, 'icon-03') !global;\n  $link-01: map-get($theme, 'link-01') !global;\n  $inverse-link: map-get($theme, 'inverse-link') !global;\n  $field-01: map-get($theme, 'field-01') !global;\n  $field-02: map-get($theme, 'field-02') !global;\n  $inverse-01: map-get($theme, 'inverse-01') !global;\n  $inverse-02: map-get($theme, 'inverse-02') !global;\n  $support-01: map-get($theme, 'support-01') !global;\n  $support-02: map-get($theme, 'support-02') !global;\n  $support-03: map-get($theme, 'support-03') !global;\n  $support-04: map-get($theme, 'support-04') !global;\n  $inverse-support-01: map-get($theme, 'inverse-support-01') !global;\n  $inverse-support-02: map-get($theme, 'inverse-support-02') !global;\n  $inverse-support-03: map-get($theme, 'inverse-support-03') !global;\n  $inverse-support-04: map-get($theme, 'inverse-support-04') !global;\n  $overlay-01: map-get($theme, 'overlay-01') !global;\n  $danger: map-get($theme, 'danger') !global;\n  $focus: map-get($theme, 'focus') !global;\n  $inverse-focus-ui: map-get($theme, 'inverse-focus-ui') !global;\n  $hover-primary: map-get($theme, 'hover-primary') !global;\n  $active-primary: map-get($theme, 'active-primary') !global;\n  $hover-primary-text: map-get($theme, 'hover-primary-text') !global;\n  $hover-secondary: map-get($theme, 'hover-secondary') !global;\n  $active-secondary: map-get($theme, 'active-secondary') !global;\n  $hover-tertiary: map-get($theme, 'hover-tertiary') !global;\n  $active-tertiary: map-get($theme, 'active-tertiary') !global;\n  $hover-ui: map-get($theme, 'hover-ui') !global;\n  $active-ui: map-get($theme, 'active-ui') !global;\n  $selected-ui: map-get($theme, 'selected-ui') !global;\n  $hover-selected-ui: map-get($theme, 'hover-selected-ui') !global;\n  $inverse-hover-ui: map-get($theme, 'inverse-hover-ui') !global;\n  $hover-danger: map-get($theme, 'hover-danger') !global;\n  $active-danger: map-get($theme, 'active-danger') !global;\n  $hover-row: map-get($theme, 'hover-row') !global;\n  $visited-link: map-get($theme, 'visited-link') !global;\n  $disabled-01: map-get($theme, 'disabled-01') !global;\n  $disabled-02: map-get($theme, 'disabled-02') !global;\n  $disabled-03: map-get($theme, 'disabled-03') !global;\n  $highlight: map-get($theme, 'highlight') !global;\n  $skeleton-01: map-get($theme, 'skeleton-01') !global;\n  $skeleton-02: map-get($theme, 'skeleton-02') !global;\n  $brand-01: map-get($theme, 'brand-01') !global;\n  $brand-02: map-get($theme, 'brand-02') !global;\n  $brand-03: map-get($theme, 'brand-03') !global;\n  $active-01: map-get($theme, 'active-01') !global;\n  $hover-field: map-get($theme, 'hover-field') !global;\n  $caption-01: map-get($theme, 'caption-01') !global;\n  $label-01: map-get($theme, 'label-01') !global;\n  $helper-text-01: map-get($theme, 'helper-text-01') !global;\n  $body-short-01: map-get($theme, 'body-short-01') !global;\n  $body-long-01: map-get($theme, 'body-long-01') !global;\n  $body-short-02: map-get($theme, 'body-short-02') !global;\n  $body-long-02: map-get($theme, 'body-long-02') !global;\n  $code-01: map-get($theme, 'code-01') !global;\n  $code-02: map-get($theme, 'code-02') !global;\n  $heading-01: map-get($theme, 'heading-01') !global;\n  $productive-heading-01: map-get($theme, 'productive-heading-01') !global;\n  $heading-02: map-get($theme, 'heading-02') !global;\n  $productive-heading-02: map-get($theme, 'productive-heading-02') !global;\n  $productive-heading-03: map-get($theme, 'productive-heading-03') !global;\n  $productive-heading-04: map-get($theme, 'productive-heading-04') !global;\n  $productive-heading-05: map-get($theme, 'productive-heading-05') !global;\n  $productive-heading-06: map-get($theme, 'productive-heading-06') !global;\n  $productive-heading-07: map-get($theme, 'productive-heading-07') !global;\n  $expressive-heading-01: map-get($theme, 'expressive-heading-01') !global;\n  $expressive-heading-02: map-get($theme, 'expressive-heading-02') !global;\n  $expressive-heading-03: map-get($theme, 'expressive-heading-03') !global;\n  $expressive-heading-04: map-get($theme, 'expressive-heading-04') !global;\n  $expressive-heading-05: map-get($theme, 'expressive-heading-05') !global;\n  $expressive-heading-06: map-get($theme, 'expressive-heading-06') !global;\n  $expressive-paragraph-01: map-get($theme, 'expressive-paragraph-01') !global;\n  $quotation-01: map-get($theme, 'quotation-01') !global;\n  $quotation-02: map-get($theme, 'quotation-02') !global;\n  $display-01: map-get($theme, 'display-01') !global;\n  $display-02: map-get($theme, 'display-02') !global;\n  $display-03: map-get($theme, 'display-03') !global;\n  $display-04: map-get($theme, 'display-04') !global;\n  $spacing-01: map-get($theme, 'spacing-01') !global;\n  $spacing-02: map-get($theme, 'spacing-02') !global;\n  $spacing-03: map-get($theme, 'spacing-03') !global;\n  $spacing-04: map-get($theme, 'spacing-04') !global;\n  $spacing-05: map-get($theme, 'spacing-05') !global;\n  $spacing-06: map-get($theme, 'spacing-06') !global;\n  $spacing-07: map-get($theme, 'spacing-07') !global;\n  $spacing-08: map-get($theme, 'spacing-08') !global;\n  $spacing-09: map-get($theme, 'spacing-09') !global;\n  $spacing-10: map-get($theme, 'spacing-10') !global;\n  $spacing-11: map-get($theme, 'spacing-11') !global;\n  $spacing-12: map-get($theme, 'spacing-12') !global;\n  $fluid-spacing-01: map-get($theme, 'fluid-spacing-01') !global;\n  $fluid-spacing-02: map-get($theme, 'fluid-spacing-02') !global;\n  $fluid-spacing-03: map-get($theme, 'fluid-spacing-03') !global;\n  $fluid-spacing-04: map-get($theme, 'fluid-spacing-04') !global;\n  $layout-01: map-get($theme, 'layout-01') !global;\n  $layout-02: map-get($theme, 'layout-02') !global;\n  $layout-03: map-get($theme, 'layout-03') !global;\n  $layout-04: map-get($theme, 'layout-04') !global;\n  $layout-05: map-get($theme, 'layout-05') !global;\n  $layout-06: map-get($theme, 'layout-06') !global;\n  $layout-07: map-get($theme, 'layout-07') !global;\n  $container-01: map-get($theme, 'container-01') !global;\n  $container-02: map-get($theme, 'container-02') !global;\n  $container-03: map-get($theme, 'container-03') !global;\n  $container-04: map-get($theme, 'container-04') !global;\n  $container-05: map-get($theme, 'container-05') !global;\n  $icon-size-01: map-get($theme, 'icon-size-01') !global;\n  $icon-size-02: map-get($theme, 'icon-size-02') !global;\n\n  @if global-variable-exists('feature-flags') and\n    map-get($feature-flags, 'enable-css-custom-properties')\n  {\n    $interactive-01: var(\n      --#{$custom-property-prefix}-interactive-01,\n      map-get($theme, 'interactive-01')\n    ) !global;\n    $interactive-02: var(\n      --#{$custom-property-prefix}-interactive-02,\n      map-get($theme, 'interactive-02')\n    ) !global;\n    $interactive-03: var(\n      --#{$custom-property-prefix}-interactive-03,\n      map-get($theme, 'interactive-03')\n    ) !global;\n    $interactive-04: var(\n      --#{$custom-property-prefix}-interactive-04,\n      map-get($theme, 'interactive-04')\n    ) !global;\n    $ui-background: var(\n      --#{$custom-property-prefix}-ui-background,\n      map-get($theme, 'ui-background')\n    ) !global;\n    $ui-01: var(\n      --#{$custom-property-prefix}-ui-01,\n      map-get($theme, 'ui-01')\n    ) !global;\n    $ui-02: var(\n      --#{$custom-property-prefix}-ui-02,\n      map-get($theme, 'ui-02')\n    ) !global;\n    $ui-03: var(\n      --#{$custom-property-prefix}-ui-03,\n      map-get($theme, 'ui-03')\n    ) !global;\n    $ui-04: var(\n      --#{$custom-property-prefix}-ui-04,\n      map-get($theme, 'ui-04')\n    ) !global;\n    $ui-05: var(\n      --#{$custom-property-prefix}-ui-05,\n      map-get($theme, 'ui-05')\n    ) !global;\n    $text-01: var(\n      --#{$custom-property-prefix}-text-01,\n      map-get($theme, 'text-01')\n    ) !global;\n    $text-02: var(\n      --#{$custom-property-prefix}-text-02,\n      map-get($theme, 'text-02')\n    ) !global;\n    $text-03: var(\n      --#{$custom-property-prefix}-text-03,\n      map-get($theme, 'text-03')\n    ) !global;\n    $text-04: var(\n      --#{$custom-property-prefix}-text-04,\n      map-get($theme, 'text-04')\n    ) !global;\n    $text-05: var(\n      --#{$custom-property-prefix}-text-05,\n      map-get($theme, 'text-05')\n    ) !global;\n    $text-error: var(\n      --#{$custom-property-prefix}-text-error,\n      map-get($theme, 'text-error')\n    ) !global;\n    $icon-01: var(\n      --#{$custom-property-prefix}-icon-01,\n      map-get($theme, 'icon-01')\n    ) !global;\n    $icon-02: var(\n      --#{$custom-property-prefix}-icon-02,\n      map-get($theme, 'icon-02')\n    ) !global;\n    $icon-03: var(\n      --#{$custom-property-prefix}-icon-03,\n      map-get($theme, 'icon-03')\n    ) !global;\n    $link-01: var(\n      --#{$custom-property-prefix}-link-01,\n      map-get($theme, 'link-01')\n    ) !global;\n    $inverse-link: var(\n      --#{$custom-property-prefix}-inverse-link,\n      map-get($theme, 'inverse-link')\n    ) !global;\n    $field-01: var(\n      --#{$custom-property-prefix}-field-01,\n      map-get($theme, 'field-01')\n    ) !global;\n    $field-02: var(\n      --#{$custom-property-prefix}-field-02,\n      map-get($theme, 'field-02')\n    ) !global;\n    $inverse-01: var(\n      --#{$custom-property-prefix}-inverse-01,\n      map-get($theme, 'inverse-01')\n    ) !global;\n    $inverse-02: var(\n      --#{$custom-property-prefix}-inverse-02,\n      map-get($theme, 'inverse-02')\n    ) !global;\n    $support-01: var(\n      --#{$custom-property-prefix}-support-01,\n      map-get($theme, 'support-01')\n    ) !global;\n    $support-02: var(\n      --#{$custom-property-prefix}-support-02,\n      map-get($theme, 'support-02')\n    ) !global;\n    $support-03: var(\n      --#{$custom-property-prefix}-support-03,\n      map-get($theme, 'support-03')\n    ) !global;\n    $support-04: var(\n      --#{$custom-property-prefix}-support-04,\n      map-get($theme, 'support-04')\n    ) !global;\n    $inverse-support-01: var(\n      --#{$custom-property-prefix}-inverse-support-01,\n      map-get($theme, 'inverse-support-01')\n    ) !global;\n    $inverse-support-02: var(\n      --#{$custom-property-prefix}-inverse-support-02,\n      map-get($theme, 'inverse-support-02')\n    ) !global;\n    $inverse-support-03: var(\n      --#{$custom-property-prefix}-inverse-support-03,\n      map-get($theme, 'inverse-support-03')\n    ) !global;\n    $inverse-support-04: var(\n      --#{$custom-property-prefix}-inverse-support-04,\n      map-get($theme, 'inverse-support-04')\n    ) !global;\n    $overlay-01: var(\n      --#{$custom-property-prefix}-overlay-01,\n      map-get($theme, 'overlay-01')\n    ) !global;\n    $danger: var(\n      --#{$custom-property-prefix}-danger,\n      map-get($theme, 'danger')\n    ) !global;\n    $focus: var(\n      --#{$custom-property-prefix}-focus,\n      map-get($theme, 'focus')\n    ) !global;\n    $inverse-focus-ui: var(\n      --#{$custom-property-prefix}-inverse-focus-ui,\n      map-get($theme, 'inverse-focus-ui')\n    ) !global;\n    $hover-primary: var(\n      --#{$custom-property-prefix}-hover-primary,\n      map-get($theme, 'hover-primary')\n    ) !global;\n    $active-primary: var(\n      --#{$custom-property-prefix}-active-primary,\n      map-get($theme, 'active-primary')\n    ) !global;\n    $hover-primary-text: var(\n      --#{$custom-property-prefix}-hover-primary-text,\n      map-get($theme, 'hover-primary-text')\n    ) !global;\n    $hover-secondary: var(\n      --#{$custom-property-prefix}-hover-secondary,\n      map-get($theme, 'hover-secondary')\n    ) !global;\n    $active-secondary: var(\n      --#{$custom-property-prefix}-active-secondary,\n      map-get($theme, 'active-secondary')\n    ) !global;\n    $hover-tertiary: var(\n      --#{$custom-property-prefix}-hover-tertiary,\n      map-get($theme, 'hover-tertiary')\n    ) !global;\n    $active-tertiary: var(\n      --#{$custom-property-prefix}-active-tertiary,\n      map-get($theme, 'active-tertiary')\n    ) !global;\n    $hover-ui: var(\n      --#{$custom-property-prefix}-hover-ui,\n      map-get($theme, 'hover-ui')\n    ) !global;\n    $active-ui: var(\n      --#{$custom-property-prefix}-active-ui,\n      map-get($theme, 'active-ui')\n    ) !global;\n    $selected-ui: var(\n      --#{$custom-property-prefix}-selected-ui,\n      map-get($theme, 'selected-ui')\n    ) !global;\n    $hover-selected-ui: var(\n      --#{$custom-property-prefix}-hover-selected-ui,\n      map-get($theme, 'hover-selected-ui')\n    ) !global;\n    $inverse-hover-ui: var(\n      --#{$custom-property-prefix}-inverse-hover-ui,\n      map-get($theme, 'inverse-hover-ui')\n    ) !global;\n    $hover-danger: var(\n      --#{$custom-property-prefix}-hover-danger,\n      map-get($theme, 'hover-danger')\n    ) !global;\n    $active-danger: var(\n      --#{$custom-property-prefix}-active-danger,\n      map-get($theme, 'active-danger')\n    ) !global;\n    $hover-row: var(\n      --#{$custom-property-prefix}-hover-row,\n      map-get($theme, 'hover-row')\n    ) !global;\n    $visited-link: var(\n      --#{$custom-property-prefix}-visited-link,\n      map-get($theme, 'visited-link')\n    ) !global;\n    $disabled-01: var(\n      --#{$custom-property-prefix}-disabled-01,\n      map-get($theme, 'disabled-01')\n    ) !global;\n    $disabled-02: var(\n      --#{$custom-property-prefix}-disabled-02,\n      map-get($theme, 'disabled-02')\n    ) !global;\n    $disabled-03: var(\n      --#{$custom-property-prefix}-disabled-03,\n      map-get($theme, 'disabled-03')\n    ) !global;\n    $highlight: var(\n      --#{$custom-property-prefix}-highlight,\n      map-get($theme, 'highlight')\n    ) !global;\n    $skeleton-01: var(\n      --#{$custom-property-prefix}-skeleton-01,\n      map-get($theme, 'skeleton-01')\n    ) !global;\n    $skeleton-02: var(\n      --#{$custom-property-prefix}-skeleton-02,\n      map-get($theme, 'skeleton-02')\n    ) !global;\n    $brand-01: var(\n      --#{$custom-property-prefix}-brand-01,\n      map-get($theme, 'brand-01')\n    ) !global;\n    $brand-02: var(\n      --#{$custom-property-prefix}-brand-02,\n      map-get($theme, 'brand-02')\n    ) !global;\n    $brand-03: var(\n      --#{$custom-property-prefix}-brand-03,\n      map-get($theme, 'brand-03')\n    ) !global;\n    $active-01: var(\n      --#{$custom-property-prefix}-active-01,\n      map-get($theme, 'active-01')\n    ) !global;\n    $hover-field: var(\n      --#{$custom-property-prefix}-hover-field,\n      map-get($theme, 'hover-field')\n    ) !global;\n    $spacing-01: var(\n      --#{$custom-property-prefix}-spacing-01,\n      map-get($theme, 'spacing-01')\n    ) !global;\n    $spacing-02: var(\n      --#{$custom-property-prefix}-spacing-02,\n      map-get($theme, 'spacing-02')\n    ) !global;\n    $spacing-03: var(\n      --#{$custom-property-prefix}-spacing-03,\n      map-get($theme, 'spacing-03')\n    ) !global;\n    $spacing-04: var(\n      --#{$custom-property-prefix}-spacing-04,\n      map-get($theme, 'spacing-04')\n    ) !global;\n    $spacing-05: var(\n      --#{$custom-property-prefix}-spacing-05,\n      map-get($theme, 'spacing-05')\n    ) !global;\n    $spacing-06: var(\n      --#{$custom-property-prefix}-spacing-06,\n      map-get($theme, 'spacing-06')\n    ) !global;\n    $spacing-07: var(\n      --#{$custom-property-prefix}-spacing-07,\n      map-get($theme, 'spacing-07')\n    ) !global;\n    $spacing-08: var(\n      --#{$custom-property-prefix}-spacing-08,\n      map-get($theme, 'spacing-08')\n    ) !global;\n    $spacing-09: var(\n      --#{$custom-property-prefix}-spacing-09,\n      map-get($theme, 'spacing-09')\n    ) !global;\n    $spacing-10: var(\n      --#{$custom-property-prefix}-spacing-10,\n      map-get($theme, 'spacing-10')\n    ) !global;\n    $spacing-11: var(\n      --#{$custom-property-prefix}-spacing-11,\n      map-get($theme, 'spacing-11')\n    ) !global;\n    $spacing-12: var(\n      --#{$custom-property-prefix}-spacing-12,\n      map-get($theme, 'spacing-12')\n    ) !global;\n    $fluid-spacing-01: var(\n      --#{$custom-property-prefix}-fluid-spacing-01,\n      map-get($theme, 'fluid-spacing-01')\n    ) !global;\n    $fluid-spacing-02: var(\n      --#{$custom-property-prefix}-fluid-spacing-02,\n      map-get($theme, 'fluid-spacing-02')\n    ) !global;\n    $fluid-spacing-03: var(\n      --#{$custom-property-prefix}-fluid-spacing-03,\n      map-get($theme, 'fluid-spacing-03')\n    ) !global;\n    $fluid-spacing-04: var(\n      --#{$custom-property-prefix}-fluid-spacing-04,\n      map-get($theme, 'fluid-spacing-04')\n    ) !global;\n    $layout-01: var(\n      --#{$custom-property-prefix}-layout-01,\n      map-get($theme, 'layout-01')\n    ) !global;\n    $layout-02: var(\n      --#{$custom-property-prefix}-layout-02,\n      map-get($theme, 'layout-02')\n    ) !global;\n    $layout-03: var(\n      --#{$custom-property-prefix}-layout-03,\n      map-get($theme, 'layout-03')\n    ) !global;\n    $layout-04: var(\n      --#{$custom-property-prefix}-layout-04,\n      map-get($theme, 'layout-04')\n    ) !global;\n    $layout-05: var(\n      --#{$custom-property-prefix}-layout-05,\n      map-get($theme, 'layout-05')\n    ) !global;\n    $layout-06: var(\n      --#{$custom-property-prefix}-layout-06,\n      map-get($theme, 'layout-06')\n    ) !global;\n    $layout-07: var(\n      --#{$custom-property-prefix}-layout-07,\n      map-get($theme, 'layout-07')\n    ) !global;\n    $container-01: var(\n      --#{$custom-property-prefix}-container-01,\n      map-get($theme, 'container-01')\n    ) !global;\n    $container-02: var(\n      --#{$custom-property-prefix}-container-02,\n      map-get($theme, 'container-02')\n    ) !global;\n    $container-03: var(\n      --#{$custom-property-prefix}-container-03,\n      map-get($theme, 'container-03')\n    ) !global;\n    $container-04: var(\n      --#{$custom-property-prefix}-container-04,\n      map-get($theme, 'container-04')\n    ) !global;\n    $container-05: var(\n      --#{$custom-property-prefix}-container-05,\n      map-get($theme, 'container-05')\n    ) !global;\n    $icon-size-01: var(\n      --#{$custom-property-prefix}-icon-size-01,\n      map-get($theme, 'icon-size-01')\n    ) !global;\n    $icon-size-02: var(\n      --#{$custom-property-prefix}-icon-size-02,\n      map-get($theme, 'icon-size-02')\n    ) !global;\n  }\n  @if $emit-custom-properties == true {\n    @if should-emit($theme, $carbon--theme, 'interactive-01', $emit-difference)\n    {\n      @include custom-property(\n        'interactive-01',\n        map-get($theme, 'interactive-01')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'interactive-02', $emit-difference)\n    {\n      @include custom-property(\n        'interactive-02',\n        map-get($theme, 'interactive-02')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'interactive-03', $emit-difference)\n    {\n      @include custom-property(\n        'interactive-03',\n        map-get($theme, 'interactive-03')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'interactive-04', $emit-difference)\n    {\n      @include custom-property(\n        'interactive-04',\n        map-get($theme, 'interactive-04')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'ui-background', $emit-difference) {\n      @include custom-property(\n        'ui-background',\n        map-get($theme, 'ui-background')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'ui-01', $emit-difference) {\n      @include custom-property('ui-01', map-get($theme, 'ui-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'ui-02', $emit-difference) {\n      @include custom-property('ui-02', map-get($theme, 'ui-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'ui-03', $emit-difference) {\n      @include custom-property('ui-03', map-get($theme, 'ui-03'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'ui-04', $emit-difference) {\n      @include custom-property('ui-04', map-get($theme, 'ui-04'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'ui-05', $emit-difference) {\n      @include custom-property('ui-05', map-get($theme, 'ui-05'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'text-01', $emit-difference) {\n      @include custom-property('text-01', map-get($theme, 'text-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'text-02', $emit-difference) {\n      @include custom-property('text-02', map-get($theme, 'text-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'text-03', $emit-difference) {\n      @include custom-property('text-03', map-get($theme, 'text-03'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'text-04', $emit-difference) {\n      @include custom-property('text-04', map-get($theme, 'text-04'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'text-05', $emit-difference) {\n      @include custom-property('text-05', map-get($theme, 'text-05'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'text-error', $emit-difference) {\n      @include custom-property('text-error', map-get($theme, 'text-error'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'icon-01', $emit-difference) {\n      @include custom-property('icon-01', map-get($theme, 'icon-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'icon-02', $emit-difference) {\n      @include custom-property('icon-02', map-get($theme, 'icon-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'icon-03', $emit-difference) {\n      @include custom-property('icon-03', map-get($theme, 'icon-03'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'link-01', $emit-difference) {\n      @include custom-property('link-01', map-get($theme, 'link-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'inverse-link', $emit-difference) {\n      @include custom-property('inverse-link', map-get($theme, 'inverse-link'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'field-01', $emit-difference) {\n      @include custom-property('field-01', map-get($theme, 'field-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'field-02', $emit-difference) {\n      @include custom-property('field-02', map-get($theme, 'field-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'inverse-01', $emit-difference) {\n      @include custom-property('inverse-01', map-get($theme, 'inverse-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'inverse-02', $emit-difference) {\n      @include custom-property('inverse-02', map-get($theme, 'inverse-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'support-01', $emit-difference) {\n      @include custom-property('support-01', map-get($theme, 'support-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'support-02', $emit-difference) {\n      @include custom-property('support-02', map-get($theme, 'support-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'support-03', $emit-difference) {\n      @include custom-property('support-03', map-get($theme, 'support-03'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'support-04', $emit-difference) {\n      @include custom-property('support-04', map-get($theme, 'support-04'));\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'inverse-support-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-01',\n        map-get($theme, 'inverse-support-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'inverse-support-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-02',\n        map-get($theme, 'inverse-support-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'inverse-support-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-03',\n        map-get($theme, 'inverse-support-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'inverse-support-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-support-04',\n        map-get($theme, 'inverse-support-04')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'overlay-01', $emit-difference) {\n      @include custom-property('overlay-01', map-get($theme, 'overlay-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'danger', $emit-difference) {\n      @include custom-property('danger', map-get($theme, 'danger'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'focus', $emit-difference) {\n      @include custom-property('focus', map-get($theme, 'focus'));\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'inverse-focus-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-focus-ui',\n        map-get($theme, 'inverse-focus-ui')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'hover-primary', $emit-difference) {\n      @include custom-property(\n        'hover-primary',\n        map-get($theme, 'hover-primary')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'active-primary', $emit-difference)\n    {\n      @include custom-property(\n        'active-primary',\n        map-get($theme, 'active-primary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'hover-primary-text',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-primary-text',\n        map-get($theme, 'hover-primary-text')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'hover-secondary', $emit-difference)\n    {\n      @include custom-property(\n        'hover-secondary',\n        map-get($theme, 'hover-secondary')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'active-secondary',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'active-secondary',\n        map-get($theme, 'active-secondary')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'hover-tertiary', $emit-difference)\n    {\n      @include custom-property(\n        'hover-tertiary',\n        map-get($theme, 'hover-tertiary')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'active-tertiary', $emit-difference)\n    {\n      @include custom-property(\n        'active-tertiary',\n        map-get($theme, 'active-tertiary')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'hover-ui', $emit-difference) {\n      @include custom-property('hover-ui', map-get($theme, 'hover-ui'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'active-ui', $emit-difference) {\n      @include custom-property('active-ui', map-get($theme, 'active-ui'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'selected-ui', $emit-difference) {\n      @include custom-property('selected-ui', map-get($theme, 'selected-ui'));\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'hover-selected-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'hover-selected-ui',\n        map-get($theme, 'hover-selected-ui')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'inverse-hover-ui',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'inverse-hover-ui',\n        map-get($theme, 'inverse-hover-ui')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'hover-danger', $emit-difference) {\n      @include custom-property('hover-danger', map-get($theme, 'hover-danger'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'active-danger', $emit-difference) {\n      @include custom-property(\n        'active-danger',\n        map-get($theme, 'active-danger')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'hover-row', $emit-difference) {\n      @include custom-property('hover-row', map-get($theme, 'hover-row'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'visited-link', $emit-difference) {\n      @include custom-property('visited-link', map-get($theme, 'visited-link'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'disabled-01', $emit-difference) {\n      @include custom-property('disabled-01', map-get($theme, 'disabled-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'disabled-02', $emit-difference) {\n      @include custom-property('disabled-02', map-get($theme, 'disabled-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'disabled-03', $emit-difference) {\n      @include custom-property('disabled-03', map-get($theme, 'disabled-03'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'highlight', $emit-difference) {\n      @include custom-property('highlight', map-get($theme, 'highlight'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'skeleton-01', $emit-difference) {\n      @include custom-property('skeleton-01', map-get($theme, 'skeleton-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'skeleton-02', $emit-difference) {\n      @include custom-property('skeleton-02', map-get($theme, 'skeleton-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'brand-01', $emit-difference) {\n      @include custom-property('brand-01', map-get($theme, 'brand-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'brand-02', $emit-difference) {\n      @include custom-property('brand-02', map-get($theme, 'brand-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'brand-03', $emit-difference) {\n      @include custom-property('brand-03', map-get($theme, 'brand-03'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'active-01', $emit-difference) {\n      @include custom-property('active-01', map-get($theme, 'active-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'hover-field', $emit-difference) {\n      @include custom-property('hover-field', map-get($theme, 'hover-field'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'caption-01', $emit-difference) {\n      @include custom-property('caption-01', map-get($theme, 'caption-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'label-01', $emit-difference) {\n      @include custom-property('label-01', map-get($theme, 'label-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'helper-text-01', $emit-difference)\n    {\n      @include custom-property(\n        'helper-text-01',\n        map-get($theme, 'helper-text-01')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'body-short-01', $emit-difference) {\n      @include custom-property(\n        'body-short-01',\n        map-get($theme, 'body-short-01')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'body-long-01', $emit-difference) {\n      @include custom-property('body-long-01', map-get($theme, 'body-long-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'body-short-02', $emit-difference) {\n      @include custom-property(\n        'body-short-02',\n        map-get($theme, 'body-short-02')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'body-long-02', $emit-difference) {\n      @include custom-property('body-long-02', map-get($theme, 'body-long-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'code-01', $emit-difference) {\n      @include custom-property('code-01', map-get($theme, 'code-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'code-02', $emit-difference) {\n      @include custom-property('code-02', map-get($theme, 'code-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'heading-01', $emit-difference) {\n      @include custom-property('heading-01', map-get($theme, 'heading-01'));\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'productive-heading-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-01',\n        map-get($theme, 'productive-heading-01')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'heading-02', $emit-difference) {\n      @include custom-property('heading-02', map-get($theme, 'heading-02'));\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'productive-heading-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-02',\n        map-get($theme, 'productive-heading-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'productive-heading-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-03',\n        map-get($theme, 'productive-heading-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'productive-heading-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-04',\n        map-get($theme, 'productive-heading-04')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'productive-heading-05',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-05',\n        map-get($theme, 'productive-heading-05')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'productive-heading-06',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-06',\n        map-get($theme, 'productive-heading-06')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'productive-heading-07',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'productive-heading-07',\n        map-get($theme, 'productive-heading-07')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'expressive-heading-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-01',\n        map-get($theme, 'expressive-heading-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'expressive-heading-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-02',\n        map-get($theme, 'expressive-heading-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'expressive-heading-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-03',\n        map-get($theme, 'expressive-heading-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'expressive-heading-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-04',\n        map-get($theme, 'expressive-heading-04')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'expressive-heading-05',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-05',\n        map-get($theme, 'expressive-heading-05')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'expressive-heading-06',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-heading-06',\n        map-get($theme, 'expressive-heading-06')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'expressive-paragraph-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'expressive-paragraph-01',\n        map-get($theme, 'expressive-paragraph-01')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'quotation-01', $emit-difference) {\n      @include custom-property('quotation-01', map-get($theme, 'quotation-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'quotation-02', $emit-difference) {\n      @include custom-property('quotation-02', map-get($theme, 'quotation-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'display-01', $emit-difference) {\n      @include custom-property('display-01', map-get($theme, 'display-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'display-02', $emit-difference) {\n      @include custom-property('display-02', map-get($theme, 'display-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'display-03', $emit-difference) {\n      @include custom-property('display-03', map-get($theme, 'display-03'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'display-04', $emit-difference) {\n      @include custom-property('display-04', map-get($theme, 'display-04'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'spacing-01', $emit-difference) {\n      @include custom-property('spacing-01', map-get($theme, 'spacing-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'spacing-02', $emit-difference) {\n      @include custom-property('spacing-02', map-get($theme, 'spacing-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'spacing-03', $emit-difference) {\n      @include custom-property('spacing-03', map-get($theme, 'spacing-03'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'spacing-04', $emit-difference) {\n      @include custom-property('spacing-04', map-get($theme, 'spacing-04'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'spacing-05', $emit-difference) {\n      @include custom-property('spacing-05', map-get($theme, 'spacing-05'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'spacing-06', $emit-difference) {\n      @include custom-property('spacing-06', map-get($theme, 'spacing-06'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'spacing-07', $emit-difference) {\n      @include custom-property('spacing-07', map-get($theme, 'spacing-07'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'spacing-08', $emit-difference) {\n      @include custom-property('spacing-08', map-get($theme, 'spacing-08'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'spacing-09', $emit-difference) {\n      @include custom-property('spacing-09', map-get($theme, 'spacing-09'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'spacing-10', $emit-difference) {\n      @include custom-property('spacing-10', map-get($theme, 'spacing-10'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'spacing-11', $emit-difference) {\n      @include custom-property('spacing-11', map-get($theme, 'spacing-11'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'spacing-12', $emit-difference) {\n      @include custom-property('spacing-12', map-get($theme, 'spacing-12'));\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'fluid-spacing-01',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-01',\n        map-get($theme, 'fluid-spacing-01')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'fluid-spacing-02',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-02',\n        map-get($theme, 'fluid-spacing-02')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'fluid-spacing-03',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-03',\n        map-get($theme, 'fluid-spacing-03')\n      );\n    }\n\n    @if should-emit(\n      $theme,\n      $carbon--theme,\n      'fluid-spacing-04',\n      $emit-difference\n    )\n    {\n      @include custom-property(\n        'fluid-spacing-04',\n        map-get($theme, 'fluid-spacing-04')\n      );\n    }\n\n    @if should-emit($theme, $carbon--theme, 'layout-01', $emit-difference) {\n      @include custom-property('layout-01', map-get($theme, 'layout-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'layout-02', $emit-difference) {\n      @include custom-property('layout-02', map-get($theme, 'layout-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'layout-03', $emit-difference) {\n      @include custom-property('layout-03', map-get($theme, 'layout-03'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'layout-04', $emit-difference) {\n      @include custom-property('layout-04', map-get($theme, 'layout-04'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'layout-05', $emit-difference) {\n      @include custom-property('layout-05', map-get($theme, 'layout-05'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'layout-06', $emit-difference) {\n      @include custom-property('layout-06', map-get($theme, 'layout-06'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'layout-07', $emit-difference) {\n      @include custom-property('layout-07', map-get($theme, 'layout-07'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'container-01', $emit-difference) {\n      @include custom-property('container-01', map-get($theme, 'container-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'container-02', $emit-difference) {\n      @include custom-property('container-02', map-get($theme, 'container-02'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'container-03', $emit-difference) {\n      @include custom-property('container-03', map-get($theme, 'container-03'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'container-04', $emit-difference) {\n      @include custom-property('container-04', map-get($theme, 'container-04'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'container-05', $emit-difference) {\n      @include custom-property('container-05', map-get($theme, 'container-05'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'icon-size-01', $emit-difference) {\n      @include custom-property('icon-size-01', map-get($theme, 'icon-size-01'));\n    }\n\n    @if should-emit($theme, $carbon--theme, 'icon-size-02', $emit-difference) {\n      @include custom-property('icon-size-02', map-get($theme, 'icon-size-02'));\n    }\n  }\n\n  @content;\n  // Reset to default theme after apply in content\n  @if $theme != $carbon--theme {\n    @include carbon--theme();\n  }\n}\n","// Code generated by @carbon/layout. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2019\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-01: 0.125rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-02: 0.25rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-03: 0.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-04: 0.75rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-05: 1rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-06: 1.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-07: 2rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-08: 2.5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-09: 3rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-10: 4rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-11: 5rem !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing-12: 6rem !default;\n\n/// @type List\n/// @access public\n/// @group @carbon/layout\n$carbon--spacing: (\n  $carbon--spacing-01,\n  $carbon--spacing-02,\n  $carbon--spacing-03,\n  $carbon--spacing-04,\n  $carbon--spacing-05,\n  $carbon--spacing-06,\n  $carbon--spacing-07,\n  $carbon--spacing-08,\n  $carbon--spacing-09,\n  $carbon--spacing-10,\n  $carbon--spacing-11,\n  $carbon--spacing-12\n);\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-01\n$spacing-01: $carbon--spacing-01 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-02\n$spacing-02: $carbon--spacing-02 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-03\n$spacing-03: $carbon--spacing-03 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-04\n$spacing-04: $carbon--spacing-04 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-05\n$spacing-05: $carbon--spacing-05 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-06\n$spacing-06: $carbon--spacing-06 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-07\n$spacing-07: $carbon--spacing-07 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-08\n$spacing-08: $carbon--spacing-08 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-09\n$spacing-09: $carbon--spacing-09 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-10\n$spacing-10: $carbon--spacing-10 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-11\n$spacing-11: $carbon--spacing-11 !default;\n\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n/// @alias carbon--spacing-12\n$spacing-12: $carbon--spacing-12 !default;\n","$css--reset: false;\n\n@import 'carbon-components/scss/globals/scss/css--font-face';\n@import 'carbon-components/scss/components/list/list';\n\nbody {\n  @include carbon--theme($carbon--theme--g10, true);\n\n  background-color: var(--cds-ui-background);\n  font-family: 'IBM Plex Sans', 'Helvetica Neue', Arial, sans-serif;\n}\n\nbx-unordered-list:not([slot='nested']) {\n  padding-left: $carbon--spacing-06;\n}\n\nbx-header {\n  background-color: $carbon--gray-90; // `$ui-background` in `g90` theme\n  border-bottom-color: $carbon--gray-70; // Adjust for above background color\n\n  ~ bx-side-nav {\n    margin-top: calc(#{rem(48px)} + 1px);\n  }\n}\n\nmain {\n  transition: padding 0.11s cubic-bezier(0.2, 0, 1, 0.9);\n  padding: calc(#{rem(48px)} + 1px) rem(16px) rem(32px) 5rem;\n  position: relative;\n}\n\nfigure {\n  margin: $carbon--spacing-09 0;\n}\n\nfigcaption {\n  margin-top: $carbon--spacing-05;\n}\n\nbx-header-menu-button,\nbx-header-name {\n  outline: none;\n}\n\nbx-side-nav {\n  &[expanded] ~ main {\n    padding-left: 18rem;\n  }\n\n  svg[slot='title-icon'] {\n    width: rem(16px);\n    height: rem(16px);\n  }\n}\n\n.bx--list--unordered.as-portfolio--list--unordered .bx--list__item {\n  @include type-style('body-long-02');\n\n  padding-right: 0;\n  width: calc(100% - #{$carbon--spacing-09});\n  margin-left: $carbon--spacing-09;\n  padding-left: $carbon--spacing-02;\n}\n\n.as-portfolio--profile {\n  @include type-style('body-short-01');\n\n  display: inline-grid;\n  grid-row-gap: $carbon--spacing-05;\n  grid-column-gap: $carbon--spacing-07;\n  grid-template-areas: \"name face-image\" \"contact face-image\";\n  margin: $carbon--spacing-07 0;\n}\n\n.as-portfolio--profile__name {\n  grid-area: name;\n  margin-top: 0;\n  margin-bottom: 0;\n}\n\n.as-portfolio--profile__contact {\n  grid-area: contact;\n}\n\n.as-portfolio--face-image {\n  grid-area: face-image;\n  width: rem(128px);\n  vertical-align: middle;\n}\n\n.as-portfolio--product-link svg {\n  animation-duration: 2s;\n  animation-name: activelink;\n  animation-iteration-count: infinite;\n  animation-direction: alternate;\n  will-change: opacity;\n}\n\n.as-portfolio--product-image {\n  width: rem(572px);\n  opacity: 0;\n  transition: opacity $duration--slow-02 motion(standard, expressive);\n}\n\n.as-portfolio--product-image--loaded {\n  opacity: 1;\n}\n\n.as-portfolio--product-image--lite-mode {\n  height: rem(377px);\n}\n\n.as-portfolio--card-list {\n  display: grid;\n  grid-gap: $carbon--spacing-07;\n\n  @include carbon--breakpoint(640px) {\n    grid-template-columns: repeat(auto-fit, 28rem);\n  }\n}\n\n.as-portfolio--card {\n  @include box-shadow;\n\n  opacity: 0;\n  background-color: rgba(255, 255, 255, 0.7);\n  padding: $carbon--spacing-07 $carbon--spacing-07 rem(72px) $carbon--spacing-07;\n  position: relative;\n\n  &[data-nav-name] {\n    transition: transform $duration--moderate-01 motion(standard, expressive);\n\n    &:hover {\n      transform: translateY(-$carbon--spacing-03);\n    }\n  }\n\n  > h2 {\n    @include box-shadow;\n    @include carbon--type-style('productive-heading-01');\n    font-size: 0.75rem;\n\n    @include carbon--breakpoint(400px) {\n      @include carbon--type-style('productive-heading-01');\n    }\n\n    @include carbon--breakpoint(460px) {\n      @include carbon--type-style('productive-heading-02');\n    }\n\n    @include carbon--breakpoint(520px) {\n      @include carbon--type-style('productive-heading-03');\n    }\n\n    padding: $carbon--spacing-05;\n    background-color: $brand-01;\n    color: $inverse-01;\n\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    margin: $carbon--spacing-07 -#{$carbon--spacing-03} -#{$carbon--spacing-03} $carbon--spacing-07;\n  }\n\n  > h3 {\n    @include carbon--type-style('productive-heading-02');\n    color: $text-05;\n  }\n\n  > .bx--list--unordered.as-portfolio--list--unordered {\n    margin-top: 0;\n    padding-left: $carbon--spacing-07;\n\n    > .bx--list__item {\n      width: calc(100% - #{rem(16px)});\n    }\n  }\n}\n\na.as-portfolio--card {\n  text-decoration: none;\n  transition: opacity 2s motion(standard, expressive);\n}\n\n.as-portfolio--card--hidden {\n  opacity: 0;\n}\n\n.as-portfolio--card--shown-1 {\n  opacity: 0.2;\n}\n\n.as-portfolio--card--shown-2 {\n  opacity: 0.4;\n}\n\n.as-portfolio--card--shown-3 {\n  opacity: 0.6;\n}\n\n.as-portfolio--card--shown-4 {\n  opacity: 0.8;\n}\n\n.as-portfolio--card--shown-5 {\n  opacity: 1;\n}\n\n.as-portfolio--card--shown-6 {\n  opacity: 1;\n}\n\n.as-portfolio--card--shown-7 {\n  opacity: 1;\n}\n\n.as-portfolio--card--shown-8 {\n  opacity: 1;\n}\n\n.as-portfolio--card--shown-9 {\n  opacity: 1;\n}\n\n.as-portfolio--card--shown {\n  opacity: 1;\n}\n\n.as-portfolio--card.as-portfolio--card--with-link {\n  cursor: pointer;\n  display: grid;\n  grid-template-areas: \"link\" \"title\" \"content\";\n  grid-template-rows: rem(192px) 0 1fr;\n  grid-gap: rem(29px);\n  padding: 0;\n\n  > h2 {\n    grid-area: title;\n    top: rem(-58px);\n    bottom: auto;\n    margin: 0;\n  }\n\n  > .as-portfolio--card__title-link-container {\n    grid-area: link;\n  }\n\n  > .as-portfolio--list--unordered {\n    grid-area: content;\n    margin: 0 $carbon--spacing-07 $carbon--spacing-07 0;\n  }\n}\n\n.as-portfolio--card__title-link-container {\n  @include carbon--type-style('productive-heading-03');\n\n  background-color: $ui-03;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: $text-01;\n  text-decoration-color: $text-01;\n\n  div {\n    animation-duration: 2s;\n    animation-name: activelink;\n    animation-iteration-count: infinite;\n    animation-direction: alternate;\n    will-change: opacity;\n  }\n\n  svg {\n    animation-duration: 2s;\n    animation-name: activelink;\n    animation-iteration-count: infinite;\n    animation-direction: alternate;\n    will-change: opacity;\n    fill: $text-01;\n  }\n}\n\n.as-portfolio--card__title-icon-container,\n.as-portfolio--card__title-pictogram-container {\n  text-align: center;\n\n  svg {\n    width: rem(160px);\n    height: rem(160px);\n  }\n}\n\n.as-portfolio--card__title-icon-container svg path {\n  fill: $text-03;\n}\n\n.as-portfolio--card__title-pictogram-container svg path {\n  stroke: $text-03;\n}\n\n.bx--list--unordered.as-portfolio--list--unordered.as-portfolio--list--unordered--with-icons {\n  margin-top: rem(-16px);\n\n  svg {\n    position: absolute;\n    top: rem(-4px);\n    left: rem(-40px);\n    fill: $brand-01;\n  }\n\n  .bx--list__item {\n    margin-left: rem(40px);\n    margin-top: rem(16px);\n    width: calc(100% - #{rem(40px)});\n\n    &::before {\n      content: none;\n    }\n  }\n}\n\n.as-portfolio--excerpts {\n  @include type-style('body-short-01');\n\n  margin-top: $carbon--spacing-07;\n\n  .bx--list--unordered.as-portfolio--list--unordered .bx--list__item {\n    @include type-style('body-short-01');\n  }\n}\n\n@keyframes activelink {\n  from {\n    opacity: 1;\n  }\n\n  to {\n    opacity: 0.5;\n  }\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n/// @access private\n/// @group @carbon/themes\n$custom-property-prefix: 'cds' !default;\n\n/// @access private\n/// @group @carbon/themes\n@mixin custom-property($name, $value, $prefix: $custom-property-prefix) {\n  @if type-of($value) == map {\n    @each $property, $property-value in $value {\n      // Only support one-level of depth for values that are maps. This is to\n      // avoid bringing properties like `breakpoints` on type tokens\n      @if type-of($property-value) != map {\n        @include custom-property('#{$name}-#{$property}', $property-value);\n      }\n    }\n  } @else {\n    --#{$prefix}-#{$name}: #{$value};\n  }\n}\n\n/// @access private\n/// @group @carbon/themes\n@function should-emit($theme-a, $theme-b, $token, $emit-difference) {\n  @if $emit-difference == false {\n    @return true;\n  }\n  @return map-get($theme-a, $token) != map-get($theme-b, $token);\n}\n\n// We import mixins last so that these methods are made available to the\n// carbon--theme mixin\n@import './generated/mixins';\n","// Code generated by @carbon/colors. DO NOT EDIT.\n//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n/// Define color variables\n/// @access public\n/// @group @carbon/colors\n/// @deprecated Use `$carbon--colors` going forward\n@mixin ibm--colors() {\n  $ibm-color__black-100: #000000 !default !global;\n  $ibm-color__blue-10: #edf5ff !default !global;\n  $ibm-color__blue-20: #d0e2ff !default !global;\n  $ibm-color__blue-30: #a6c8ff !default !global;\n  $ibm-color__blue-40: #78a9ff !default !global;\n  $ibm-color__blue-50: #4589ff !default !global;\n  $ibm-color__blue-60: #0f62fe !default !global;\n  $ibm-color__blue-70: #0043ce !default !global;\n  $ibm-color__blue-80: #002d9c !default !global;\n  $ibm-color__blue-90: #001d6c !default !global;\n  $ibm-color__blue-100: #001141 !default !global;\n  $ibm-color__cool-gray-10: #f2f4f8 !default !global;\n  $ibm-color__cool-gray-20: #dde1e6 !default !global;\n  $ibm-color__cool-gray-30: #c1c7cd !default !global;\n  $ibm-color__cool-gray-40: #a2a9b0 !default !global;\n  $ibm-color__cool-gray-50: #878d96 !default !global;\n  $ibm-color__cool-gray-60: #697077 !default !global;\n  $ibm-color__cool-gray-70: #4d5358 !default !global;\n  $ibm-color__cool-gray-80: #343a3f !default !global;\n  $ibm-color__cool-gray-90: #21272a !default !global;\n  $ibm-color__cool-gray-100: #121619 !default !global;\n  $ibm-color__cyan-10: #e5f6ff !default !global;\n  $ibm-color__cyan-20: #bae6ff !default !global;\n  $ibm-color__cyan-30: #82cfff !default !global;\n  $ibm-color__cyan-40: #33b1ff !default !global;\n  $ibm-color__cyan-50: #1192e8 !default !global;\n  $ibm-color__cyan-60: #0072c3 !default !global;\n  $ibm-color__cyan-70: #00539a !default !global;\n  $ibm-color__cyan-80: #003a6d !default !global;\n  $ibm-color__cyan-90: #012749 !default !global;\n  $ibm-color__cyan-100: #061727 !default !global;\n  $ibm-color__gray-10: #f4f4f4 !default !global;\n  $ibm-color__gray-20: #e0e0e0 !default !global;\n  $ibm-color__gray-30: #c6c6c6 !default !global;\n  $ibm-color__gray-40: #a8a8a8 !default !global;\n  $ibm-color__gray-50: #8d8d8d !default !global;\n  $ibm-color__gray-60: #6f6f6f !default !global;\n  $ibm-color__gray-70: #525252 !default !global;\n  $ibm-color__gray-80: #393939 !default !global;\n  $ibm-color__gray-90: #262626 !default !global;\n  $ibm-color__gray-100: #161616 !default !global;\n  $ibm-color__green-10: #defbe6 !default !global;\n  $ibm-color__green-20: #a7f0ba !default !global;\n  $ibm-color__green-30: #6fdc8c !default !global;\n  $ibm-color__green-40: #42be65 !default !global;\n  $ibm-color__green-50: #24a148 !default !global;\n  $ibm-color__green-60: #198038 !default !global;\n  $ibm-color__green-70: #0e6027 !default !global;\n  $ibm-color__green-80: #044317 !default !global;\n  $ibm-color__green-90: #022d0d !default !global;\n  $ibm-color__green-100: #071908 !default !global;\n  $ibm-color__magenta-10: #fff0f7 !default !global;\n  $ibm-color__magenta-20: #ffd6e8 !default !global;\n  $ibm-color__magenta-30: #ffafd2 !default !global;\n  $ibm-color__magenta-40: #ff7eb6 !default !global;\n  $ibm-color__magenta-50: #ee5396 !default !global;\n  $ibm-color__magenta-60: #d12771 !default !global;\n  $ibm-color__magenta-70: #9f1853 !default !global;\n  $ibm-color__magenta-80: #740937 !default !global;\n  $ibm-color__magenta-90: #510224 !default !global;\n  $ibm-color__magenta-100: #2a0a18 !default !global;\n  $ibm-color__orange-40: #ff832b !default !global;\n  $ibm-color__purple-10: #f6f2ff !default !global;\n  $ibm-color__purple-20: #e8daff !default !global;\n  $ibm-color__purple-30: #d4bbff !default !global;\n  $ibm-color__purple-40: #be95ff !default !global;\n  $ibm-color__purple-50: #a56eff !default !global;\n  $ibm-color__purple-60: #8a3ffc !default !global;\n  $ibm-color__purple-70: #6929c4 !default !global;\n  $ibm-color__purple-80: #491d8b !default !global;\n  $ibm-color__purple-90: #31135e !default !global;\n  $ibm-color__purple-100: #1c0f30 !default !global;\n  $ibm-color__red-10: #fff1f1 !default !global;\n  $ibm-color__red-20: #ffd7d9 !default !global;\n  $ibm-color__red-30: #ffb3b8 !default !global;\n  $ibm-color__red-40: #ff8389 !default !global;\n  $ibm-color__red-50: #fa4d56 !default !global;\n  $ibm-color__red-60: #da1e28 !default !global;\n  $ibm-color__red-70: #a2191f !default !global;\n  $ibm-color__red-80: #750e13 !default !global;\n  $ibm-color__red-90: #520408 !default !global;\n  $ibm-color__red-100: #2d0709 !default !global;\n  $ibm-color__teal-10: #d9fbfb !default !global;\n  $ibm-color__teal-20: #9ef0f0 !default !global;\n  $ibm-color__teal-30: #3ddbd9 !default !global;\n  $ibm-color__teal-40: #08bdba !default !global;\n  $ibm-color__teal-50: #009d9a !default !global;\n  $ibm-color__teal-60: #007d79 !default !global;\n  $ibm-color__teal-70: #005d5d !default !global;\n  $ibm-color__teal-80: #004144 !default !global;\n  $ibm-color__teal-90: #022b30 !default !global;\n  $ibm-color__teal-100: #081a1c !default !global;\n  $ibm-color__warm-gray-10: #f7f3f2 !default !global;\n  $ibm-color__warm-gray-20: #e5e0df !default !global;\n  $ibm-color__warm-gray-30: #cac5c4 !default !global;\n  $ibm-color__warm-gray-40: #ada8a8 !default !global;\n  $ibm-color__warm-gray-50: #8f8b8b !default !global;\n  $ibm-color__warm-gray-60: #736f6f !default !global;\n  $ibm-color__warm-gray-70: #565151 !default !global;\n  $ibm-color__warm-gray-80: #3c3838 !default !global;\n  $ibm-color__warm-gray-90: #272525 !default !global;\n  $ibm-color__warm-gray-100: #171414 !default !global;\n  $ibm-color__white-0: #ffffff !default !global;\n  $ibm-color__yellow-20: #fdd13a !default !global;\n  $ibm-color__yellow-30: #f1c21b !default !global;\n  $ibm-color-map: (\n    'black': (\n      100: #000000,\n    ),\n    'blue': (\n      10: #edf5ff,\n      20: #d0e2ff,\n      30: #a6c8ff,\n      40: #78a9ff,\n      50: #4589ff,\n      60: #0f62fe,\n      70: #0043ce,\n      80: #002d9c,\n      90: #001d6c,\n      100: #001141,\n    ),\n    'cool-gray': (\n      10: #f2f4f8,\n      20: #dde1e6,\n      30: #c1c7cd,\n      40: #a2a9b0,\n      50: #878d96,\n      60: #697077,\n      70: #4d5358,\n      80: #343a3f,\n      90: #21272a,\n      100: #121619,\n    ),\n    'coolGray': (\n      10: #f2f4f8,\n      20: #dde1e6,\n      30: #c1c7cd,\n      40: #a2a9b0,\n      50: #878d96,\n      60: #697077,\n      70: #4d5358,\n      80: #343a3f,\n      90: #21272a,\n      100: #121619,\n    ),\n    'cyan': (\n      10: #e5f6ff,\n      20: #bae6ff,\n      30: #82cfff,\n      40: #33b1ff,\n      50: #1192e8,\n      60: #0072c3,\n      70: #00539a,\n      80: #003a6d,\n      90: #012749,\n      100: #061727,\n    ),\n    'gray': (\n      10: #f4f4f4,\n      20: #e0e0e0,\n      30: #c6c6c6,\n      40: #a8a8a8,\n      50: #8d8d8d,\n      60: #6f6f6f,\n      70: #525252,\n      80: #393939,\n      90: #262626,\n      100: #161616,\n    ),\n    'green': (\n      10: #defbe6,\n      20: #a7f0ba,\n      30: #6fdc8c,\n      40: #42be65,\n      50: #24a148,\n      60: #198038,\n      70: #0e6027,\n      80: #044317,\n      90: #022d0d,\n      100: #071908,\n    ),\n    'magenta': (\n      10: #fff0f7,\n      20: #ffd6e8,\n      30: #ffafd2,\n      40: #ff7eb6,\n      50: #ee5396,\n      60: #d12771,\n      70: #9f1853,\n      80: #740937,\n      90: #510224,\n      100: #2a0a18,\n    ),\n    'orange': (\n      40: #ff832b,\n    ),\n    'purple': (\n      10: #f6f2ff,\n      20: #e8daff,\n      30: #d4bbff,\n      40: #be95ff,\n      50: #a56eff,\n      60: #8a3ffc,\n      70: #6929c4,\n      80: #491d8b,\n      90: #31135e,\n      100: #1c0f30,\n    ),\n    'red': (\n      10: #fff1f1,\n      20: #ffd7d9,\n      30: #ffb3b8,\n      40: #ff8389,\n      50: #fa4d56,\n      60: #da1e28,\n      70: #a2191f,\n      80: #750e13,\n      90: #520408,\n      100: #2d0709,\n    ),\n    'teal': (\n      10: #d9fbfb,\n      20: #9ef0f0,\n      30: #3ddbd9,\n      40: #08bdba,\n      50: #009d9a,\n      60: #007d79,\n      70: #005d5d,\n      80: #004144,\n      90: #022b30,\n      100: #081a1c,\n    ),\n    'warm-gray': (\n      10: #f7f3f2,\n      20: #e5e0df,\n      30: #cac5c4,\n      40: #ada8a8,\n      50: #8f8b8b,\n      60: #736f6f,\n      70: #565151,\n      80: #3c3838,\n      90: #272525,\n      100: #171414,\n    ),\n    'warmGray': (\n      10: #f7f3f2,\n      20: #e5e0df,\n      30: #cac5c4,\n      40: #ada8a8,\n      50: #8f8b8b,\n      60: #736f6f,\n      70: #565151,\n      80: #3c3838,\n      90: #272525,\n      100: #171414,\n    ),\n    'white': (\n      0: #ffffff,\n    ),\n    'yellow': (\n      20: #fdd13a,\n      30: #f1c21b,\n    ),\n  ) !default !global;\n}\n/// Define color variables\n/// @access public\n/// @group @carbon/colors\n@mixin carbon--colors() {\n  $carbon--black-100: #000000 !default !global;\n  $carbon--blue-10: #edf5ff !default !global;\n  $carbon--blue-20: #d0e2ff !default !global;\n  $carbon--blue-30: #a6c8ff !default !global;\n  $carbon--blue-40: #78a9ff !default !global;\n  $carbon--blue-50: #4589ff !default !global;\n  $carbon--blue-60: #0f62fe !default !global;\n  $carbon--blue-70: #0043ce !default !global;\n  $carbon--blue-80: #002d9c !default !global;\n  $carbon--blue-90: #001d6c !default !global;\n  $carbon--blue-100: #001141 !default !global;\n  $carbon--cool-gray-10: #f2f4f8 !default !global;\n  $carbon--cool-gray-20: #dde1e6 !default !global;\n  $carbon--cool-gray-30: #c1c7cd !default !global;\n  $carbon--cool-gray-40: #a2a9b0 !default !global;\n  $carbon--cool-gray-50: #878d96 !default !global;\n  $carbon--cool-gray-60: #697077 !default !global;\n  $carbon--cool-gray-70: #4d5358 !default !global;\n  $carbon--cool-gray-80: #343a3f !default !global;\n  $carbon--cool-gray-90: #21272a !default !global;\n  $carbon--cool-gray-100: #121619 !default !global;\n  $carbon--cyan-10: #e5f6ff !default !global;\n  $carbon--cyan-20: #bae6ff !default !global;\n  $carbon--cyan-30: #82cfff !default !global;\n  $carbon--cyan-40: #33b1ff !default !global;\n  $carbon--cyan-50: #1192e8 !default !global;\n  $carbon--cyan-60: #0072c3 !default !global;\n  $carbon--cyan-70: #00539a !default !global;\n  $carbon--cyan-80: #003a6d !default !global;\n  $carbon--cyan-90: #012749 !default !global;\n  $carbon--cyan-100: #061727 !default !global;\n  $carbon--gray-10: #f4f4f4 !default !global;\n  $carbon--gray-20: #e0e0e0 !default !global;\n  $carbon--gray-30: #c6c6c6 !default !global;\n  $carbon--gray-40: #a8a8a8 !default !global;\n  $carbon--gray-50: #8d8d8d !default !global;\n  $carbon--gray-60: #6f6f6f !default !global;\n  $carbon--gray-70: #525252 !default !global;\n  $carbon--gray-80: #393939 !default !global;\n  $carbon--gray-90: #262626 !default !global;\n  $carbon--gray-100: #161616 !default !global;\n  $carbon--green-10: #defbe6 !default !global;\n  $carbon--green-20: #a7f0ba !default !global;\n  $carbon--green-30: #6fdc8c !default !global;\n  $carbon--green-40: #42be65 !default !global;\n  $carbon--green-50: #24a148 !default !global;\n  $carbon--green-60: #198038 !default !global;\n  $carbon--green-70: #0e6027 !default !global;\n  $carbon--green-80: #044317 !default !global;\n  $carbon--green-90: #022d0d !default !global;\n  $carbon--green-100: #071908 !default !global;\n  $carbon--magenta-10: #fff0f7 !default !global;\n  $carbon--magenta-20: #ffd6e8 !default !global;\n  $carbon--magenta-30: #ffafd2 !default !global;\n  $carbon--magenta-40: #ff7eb6 !default !global;\n  $carbon--magenta-50: #ee5396 !default !global;\n  $carbon--magenta-60: #d12771 !default !global;\n  $carbon--magenta-70: #9f1853 !default !global;\n  $carbon--magenta-80: #740937 !default !global;\n  $carbon--magenta-90: #510224 !default !global;\n  $carbon--magenta-100: #2a0a18 !default !global;\n  $carbon--orange-40: #ff832b !default !global;\n  $carbon--purple-10: #f6f2ff !default !global;\n  $carbon--purple-20: #e8daff !default !global;\n  $carbon--purple-30: #d4bbff !default !global;\n  $carbon--purple-40: #be95ff !default !global;\n  $carbon--purple-50: #a56eff !default !global;\n  $carbon--purple-60: #8a3ffc !default !global;\n  $carbon--purple-70: #6929c4 !default !global;\n  $carbon--purple-80: #491d8b !default !global;\n  $carbon--purple-90: #31135e !default !global;\n  $carbon--purple-100: #1c0f30 !default !global;\n  $carbon--red-10: #fff1f1 !default !global;\n  $carbon--red-20: #ffd7d9 !default !global;\n  $carbon--red-30: #ffb3b8 !default !global;\n  $carbon--red-40: #ff8389 !default !global;\n  $carbon--red-50: #fa4d56 !default !global;\n  $carbon--red-60: #da1e28 !default !global;\n  $carbon--red-70: #a2191f !default !global;\n  $carbon--red-80: #750e13 !default !global;\n  $carbon--red-90: #520408 !default !global;\n  $carbon--red-100: #2d0709 !default !global;\n  $carbon--teal-10: #d9fbfb !default !global;\n  $carbon--teal-20: #9ef0f0 !default !global;\n  $carbon--teal-30: #3ddbd9 !default !global;\n  $carbon--teal-40: #08bdba !default !global;\n  $carbon--teal-50: #009d9a !default !global;\n  $carbon--teal-60: #007d79 !default !global;\n  $carbon--teal-70: #005d5d !default !global;\n  $carbon--teal-80: #004144 !default !global;\n  $carbon--teal-90: #022b30 !default !global;\n  $carbon--teal-100: #081a1c !default !global;\n  $carbon--warm-gray-10: #f7f3f2 !default !global;\n  $carbon--warm-gray-20: #e5e0df !default !global;\n  $carbon--warm-gray-30: #cac5c4 !default !global;\n  $carbon--warm-gray-40: #ada8a8 !default !global;\n  $carbon--warm-gray-50: #8f8b8b !default !global;\n  $carbon--warm-gray-60: #736f6f !default !global;\n  $carbon--warm-gray-70: #565151 !default !global;\n  $carbon--warm-gray-80: #3c3838 !default !global;\n  $carbon--warm-gray-90: #272525 !default !global;\n  $carbon--warm-gray-100: #171414 !default !global;\n  $carbon--white-0: #ffffff !default !global;\n  $carbon--yellow-20: #fdd13a !default !global;\n  $carbon--yellow-30: #f1c21b !default !global;\n  $black-100: #000000 !default !global;\n  $blue-10: #edf5ff !default !global;\n  $blue-20: #d0e2ff !default !global;\n  $blue-30: #a6c8ff !default !global;\n  $blue-40: #78a9ff !default !global;\n  $blue-50: #4589ff !default !global;\n  $blue-60: #0f62fe !default !global;\n  $blue-70: #0043ce !default !global;\n  $blue-80: #002d9c !default !global;\n  $blue-90: #001d6c !default !global;\n  $blue-100: #001141 !default !global;\n  $cool-gray-10: #f2f4f8 !default !global;\n  $cool-gray-20: #dde1e6 !default !global;\n  $cool-gray-30: #c1c7cd !default !global;\n  $cool-gray-40: #a2a9b0 !default !global;\n  $cool-gray-50: #878d96 !default !global;\n  $cool-gray-60: #697077 !default !global;\n  $cool-gray-70: #4d5358 !default !global;\n  $cool-gray-80: #343a3f !default !global;\n  $cool-gray-90: #21272a !default !global;\n  $cool-gray-100: #121619 !default !global;\n  $cyan-10: #e5f6ff !default !global;\n  $cyan-20: #bae6ff !default !global;\n  $cyan-30: #82cfff !default !global;\n  $cyan-40: #33b1ff !default !global;\n  $cyan-50: #1192e8 !default !global;\n  $cyan-60: #0072c3 !default !global;\n  $cyan-70: #00539a !default !global;\n  $cyan-80: #003a6d !default !global;\n  $cyan-90: #012749 !default !global;\n  $cyan-100: #061727 !default !global;\n  $gray-10: #f4f4f4 !default !global;\n  $gray-20: #e0e0e0 !default !global;\n  $gray-30: #c6c6c6 !default !global;\n  $gray-40: #a8a8a8 !default !global;\n  $gray-50: #8d8d8d !default !global;\n  $gray-60: #6f6f6f !default !global;\n  $gray-70: #525252 !default !global;\n  $gray-80: #393939 !default !global;\n  $gray-90: #262626 !default !global;\n  $gray-100: #161616 !default !global;\n  $green-10: #defbe6 !default !global;\n  $green-20: #a7f0ba !default !global;\n  $green-30: #6fdc8c !default !global;\n  $green-40: #42be65 !default !global;\n  $green-50: #24a148 !default !global;\n  $green-60: #198038 !default !global;\n  $green-70: #0e6027 !default !global;\n  $green-80: #044317 !default !global;\n  $green-90: #022d0d !default !global;\n  $green-100: #071908 !default !global;\n  $magenta-10: #fff0f7 !default !global;\n  $magenta-20: #ffd6e8 !default !global;\n  $magenta-30: #ffafd2 !default !global;\n  $magenta-40: #ff7eb6 !default !global;\n  $magenta-50: #ee5396 !default !global;\n  $magenta-60: #d12771 !default !global;\n  $magenta-70: #9f1853 !default !global;\n  $magenta-80: #740937 !default !global;\n  $magenta-90: #510224 !default !global;\n  $magenta-100: #2a0a18 !default !global;\n  $orange-40: #ff832b !default !global;\n  $purple-10: #f6f2ff !default !global;\n  $purple-20: #e8daff !default !global;\n  $purple-30: #d4bbff !default !global;\n  $purple-40: #be95ff !default !global;\n  $purple-50: #a56eff !default !global;\n  $purple-60: #8a3ffc !default !global;\n  $purple-70: #6929c4 !default !global;\n  $purple-80: #491d8b !default !global;\n  $purple-90: #31135e !default !global;\n  $purple-100: #1c0f30 !default !global;\n  $red-10: #fff1f1 !default !global;\n  $red-20: #ffd7d9 !default !global;\n  $red-30: #ffb3b8 !default !global;\n  $red-40: #ff8389 !default !global;\n  $red-50: #fa4d56 !default !global;\n  $red-60: #da1e28 !default !global;\n  $red-70: #a2191f !default !global;\n  $red-80: #750e13 !default !global;\n  $red-90: #520408 !default !global;\n  $red-100: #2d0709 !default !global;\n  $teal-10: #d9fbfb !default !global;\n  $teal-20: #9ef0f0 !default !global;\n  $teal-30: #3ddbd9 !default !global;\n  $teal-40: #08bdba !default !global;\n  $teal-50: #009d9a !default !global;\n  $teal-60: #007d79 !default !global;\n  $teal-70: #005d5d !default !global;\n  $teal-80: #004144 !default !global;\n  $teal-90: #022b30 !default !global;\n  $teal-100: #081a1c !default !global;\n  $warm-gray-10: #f7f3f2 !default !global;\n  $warm-gray-20: #e5e0df !default !global;\n  $warm-gray-30: #cac5c4 !default !global;\n  $warm-gray-40: #ada8a8 !default !global;\n  $warm-gray-50: #8f8b8b !default !global;\n  $warm-gray-60: #736f6f !default !global;\n  $warm-gray-70: #565151 !default !global;\n  $warm-gray-80: #3c3838 !default !global;\n  $warm-gray-90: #272525 !default !global;\n  $warm-gray-100: #171414 !default !global;\n  $white-0: #ffffff !default !global;\n  $yellow-20: #fdd13a !default !global;\n  $yellow-30: #f1c21b !default !global;\n  $carbon--colors: (\n    'black': (\n      100: #000000,\n    ),\n    'blue': (\n      10: #edf5ff,\n      20: #d0e2ff,\n      30: #a6c8ff,\n      40: #78a9ff,\n      50: #4589ff,\n      60: #0f62fe,\n      70: #0043ce,\n      80: #002d9c,\n      90: #001d6c,\n      100: #001141,\n    ),\n    'cool-gray': (\n      10: #f2f4f8,\n      20: #dde1e6,\n      30: #c1c7cd,\n      40: #a2a9b0,\n      50: #878d96,\n      60: #697077,\n      70: #4d5358,\n      80: #343a3f,\n      90: #21272a,\n      100: #121619,\n    ),\n    'coolGray': (\n      10: #f2f4f8,\n      20: #dde1e6,\n      30: #c1c7cd,\n      40: #a2a9b0,\n      50: #878d96,\n      60: #697077,\n      70: #4d5358,\n      80: #343a3f,\n      90: #21272a,\n      100: #121619,\n    ),\n    'cyan': (\n      10: #e5f6ff,\n      20: #bae6ff,\n      30: #82cfff,\n      40: #33b1ff,\n      50: #1192e8,\n      60: #0072c3,\n      70: #00539a,\n      80: #003a6d,\n      90: #012749,\n      100: #061727,\n    ),\n    'gray': (\n      10: #f4f4f4,\n      20: #e0e0e0,\n      30: #c6c6c6,\n      40: #a8a8a8,\n      50: #8d8d8d,\n      60: #6f6f6f,\n      70: #525252,\n      80: #393939,\n      90: #262626,\n      100: #161616,\n    ),\n    'green': (\n      10: #defbe6,\n      20: #a7f0ba,\n      30: #6fdc8c,\n      40: #42be65,\n      50: #24a148,\n      60: #198038,\n      70: #0e6027,\n      80: #044317,\n      90: #022d0d,\n      100: #071908,\n    ),\n    'magenta': (\n      10: #fff0f7,\n      20: #ffd6e8,\n      30: #ffafd2,\n      40: #ff7eb6,\n      50: #ee5396,\n      60: #d12771,\n      70: #9f1853,\n      80: #740937,\n      90: #510224,\n      100: #2a0a18,\n    ),\n    'orange': (\n      40: #ff832b,\n    ),\n    'purple': (\n      10: #f6f2ff,\n      20: #e8daff,\n      30: #d4bbff,\n      40: #be95ff,\n      50: #a56eff,\n      60: #8a3ffc,\n      70: #6929c4,\n      80: #491d8b,\n      90: #31135e,\n      100: #1c0f30,\n    ),\n    'red': (\n      10: #fff1f1,\n      20: #ffd7d9,\n      30: #ffb3b8,\n      40: #ff8389,\n      50: #fa4d56,\n      60: #da1e28,\n      70: #a2191f,\n      80: #750e13,\n      90: #520408,\n      100: #2d0709,\n    ),\n    'teal': (\n      10: #d9fbfb,\n      20: #9ef0f0,\n      30: #3ddbd9,\n      40: #08bdba,\n      50: #009d9a,\n      60: #007d79,\n      70: #005d5d,\n      80: #004144,\n      90: #022b30,\n      100: #081a1c,\n    ),\n    'warm-gray': (\n      10: #f7f3f2,\n      20: #e5e0df,\n      30: #cac5c4,\n      40: #ada8a8,\n      50: #8f8b8b,\n      60: #736f6f,\n      70: #565151,\n      80: #3c3838,\n      90: #272525,\n      100: #171414,\n    ),\n    'warmGray': (\n      10: #f7f3f2,\n      20: #e5e0df,\n      30: #cac5c4,\n      40: #ada8a8,\n      50: #8f8b8b,\n      60: #736f6f,\n      70: #565151,\n      80: #3c3838,\n      90: #272525,\n      100: #171414,\n    ),\n    'white': (\n      0: #ffffff,\n    ),\n    'yellow': (\n      20: #fdd13a,\n      30: #f1c21b,\n    ),\n  ) !default !global;\n}\n","//\n// Copyright IBM Corp. 2018, 2018\n//\n// This source code is licensed under the Apache-2.0 license found in the\n// LICENSE file in the root directory of this source tree.\n//\n\n// https://github.com/twbs/bootstrap/blob/v4-dev/scss/mixins/_breakpoints.scss\n@import 'convert';\n@import 'utilities';\n\n/// Carbon gutter size in rem\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--grid-gutter: carbon--rem(32px);\n\n/// Carbon condensed gutter size in rem\n/// @type Number\n/// @access public\n/// @group @carbon/layout\n$carbon--grid-gutter--condensed: carbon--rem(2px);\n\n// Initial map of our breakpoints and their values\n/// @type Map\n/// @access public\n/// @group @carbon/layout\n$carbon--grid-breakpoints: (\n  sm: (\n    columns: 4,\n    margin: 0,\n    width: carbon--rem(320px),\n  ),\n  md: (\n    columns: 8,\n    margin: carbon--rem(16px),\n    width: carbon--rem(672px),\n  ),\n  lg: (\n    columns: 16,\n    margin: carbon--rem(16px),\n    width: carbon--rem(1056px),\n  ),\n  xlg: (\n    columns: 16,\n    margin: carbon--rem(16px),\n    width: carbon--rem(1312px),\n  ),\n  max: (\n    columns: 16,\n    margin: carbon--rem(24px),\n    width: carbon--rem(1584px),\n  ),\n) !default;\n\n/// Get the value of the next breakpoint, or null for the last breakpoint\n/// @param {String} $name - The name of the brekapoint\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @param {List} $breakpoint-names [map-keys($breakpoints)] - A list of names from the `$breakpoints` map\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function carbon--breakpoint-next(\n  $name,\n  $breakpoints: $carbon--grid-breakpoints,\n  $breakpoint-names: map-keys($breakpoints)\n) {\n  $n: index($breakpoint-names, $name);\n  @if $n != null and $n < length($breakpoint-names) {\n    @return nth($breakpoint-names, $n + 1);\n  }\n  @return null;\n}\n\n/// Get the value of the previous breakpoint, or null for the first breakpoint\n/// @param {String} $name - The name of the brekapoint\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @param {List} $breakpoint-names [map-keys($breakpoints)] - A list of names from the `$breakpoints` map\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function carbon--breakpoint-prev(\n  $name,\n  $breakpoints: $carbon--grid-breakpoints,\n  $breakpoint-names: map-keys($breakpoints)\n) {\n  $n: index($breakpoint-names, $name);\n  @if $n != null and $n > 1 {\n    @return nth($breakpoint-names, $n - 1);\n  }\n  @return null;\n}\n\n/// Check to see if the given breakpoint name\n/// @param {String} $name - The name of the brekapoint\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name of the breakpoint and the value is the values for the breakpoint\n/// @return {Bool}\n/// @access public\n/// @group @carbon/layout\n@function carbon--is-smallest-breakpoint(\n  $name,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  @return index(map-keys($breakpoints), $name) == 1;\n}\n\n/// Returns the largest breakpoint name\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function carbon--largest-breakpoint-name(\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  $total-breakpoints: length($breakpoints);\n  @return carbon--key-by-index($breakpoints, $total-breakpoints);\n}\n\n/// Get the infix for a given breakpoint in a list of breakpoints. Usesful for generate the size part in a selector, for example: `.prefix--col-sm-2`.\n/// @param {String} $name - The name of the breakpoint\n/// @return {String}\n/// @access public\n/// @group @carbon/layout\n@function carbon--breakpoint-infix($name) {\n  @return '-#{$name}';\n}\n\n/// Generate a media query up to the width of the given breakpoint name\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin carbon--breakpoint-up($name, $breakpoints: $carbon--grid-breakpoints) {\n  @if type-of($name) == 'number' {\n    @media (min-width: $name) {\n      @content;\n    }\n  } @else if map-has-key($breakpoints, $name) {\n    $breakpoint: map-get($breakpoints, $name);\n    $width: map-get($breakpoint, width);\n    @if carbon--is-smallest-breakpoint($name, $breakpoints) {\n      @content;\n    } @else {\n      @media (min-width: $width) {\n        @content;\n      }\n    }\n  } @else {\n    @error 'Unable to find a breakpoint with name `#{$name}`. Expected one of: (#{map-keys($breakpoints)})';\n  }\n}\n\n/// Generate a media query for the maximum width of the given styles\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin carbon--breakpoint-down($name, $breakpoints: $carbon--grid-breakpoints) {\n  @if type-of($name) == 'number' {\n    @media (max-width: $name) {\n      @content;\n    }\n  } @else if map-has-key($breakpoints, $name) {\n    $breakpoint: map-get($breakpoints, $name);\n    $width: map-get($breakpoint, width);\n    @media (max-width: $width) {\n      @content;\n    }\n  } @else {\n    @error 'Unable to find a breakpoint with name `#{$name}`. Expected one of: (#{map-keys($breakpoints)})';\n  }\n}\n\n/// Generate a media query for the range between the lower and upper breakpoints\n/// @param {String | Number} $lower\n/// @param {String | Number} $upper\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin carbon--breakpoint-between(\n  $lower,\n  $upper,\n  $breakpoints: $carbon--grid-breakpoints\n) {\n  $is-number-lower: type-of($lower) == 'number';\n  $is-number-upper: type-of($upper) == 'number';\n  $min: if($is-number-lower, $lower, map-get($breakpoints, $lower));\n  $max: if($is-number-upper, $upper, map-get($breakpoints, $upper));\n\n  @if $min and $max {\n    $min-width: if(not $is-number-lower and $min, map-get($min, width), $min);\n    $max-width: if(not $is-number-upper and $max, map-get($max, width), $max);\n    @media (min-width: $min-width) and (max-width: $max-width) {\n      @content;\n    }\n  } @else if $min != null and $max == null {\n    @include carbon--breakpoint-up($lower) {\n      @content;\n    }\n  } @else if $min == null and $max != null {\n    @include carbon--breakpoint-down($upper) {\n      @content;\n    }\n  } @else {\n    @error 'Unable to find a breakpoint to satisfy: (#{$lower},#{$upper}). Expected both to be one of (#{map-keys($breakpoints)}).';\n  }\n}\n\n/// Generate media query for the largest breakpoint\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin carbon--largest-breakpoint($breakpoints: $carbon--grid-breakpoints) {\n  @include carbon--breakpoint(carbon--largest-breakpoint-name()) {\n    @content;\n  }\n}\n\n/// Generate a media query for a given breakpoint\n/// @param {String | Number} $name\n/// @param {Map} $breakpoints [$carbon--grid-breakpoints] - A map of breakpoints where the key is the name\n/// @content\n/// @access public\n/// @group @carbon/layout\n@mixin carbon--breakpoint($name, $breakpoints: $carbon--grid-breakpoints) {\n  @include carbon--breakpoint-up($name, $breakpoints) {\n    @content;\n  }\n}\n"]}